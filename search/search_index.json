{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"test/","text":"\u6d4b\u8bd5","title":"Test"},{"location":"DataStructure/about/","text":"this is a about me page","title":"AVL Tree"},{"location":"OS/os/","text":"","title":"OS NOTES"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/","text":"Introduction to SOAP and Web Service \u00b6 1. What is WebService and SOAP? \u00b6 1.1 Web Service \u00b6 Web Service\uff0c\u662f\u4e3a\u4e86\u4e0d\u540c\u7684\u5e73\u53f0\u7684\u4e0d\u540c\u8bed\u8a00\u5199\u6210\u7684\u4e0d\u540c\u670d\u52a1\u8fdb\u884c\u7684\u901a\u4fe1\u7684\u4e00\u4e2a\u6807\u51c6\uff0c\u4e00\u4e2aWeb\u5e94\u7528\uff0c\u53ef\u4ee5\u751f\u6210Web Service\u7684Server\u7aef\uff0c\u5176\u4ed6\u5e94\u7528\u901a\u8fc7\u67d0\u79cd\u534f\u8bae\u6765\u8c03\u7528\u8be5\u5e94\u7528\u7684API\uff0c\u4ece\u800c\u83b7\u53d6\u6240\u9700\u7684\u6570\u636e\u3002 \u800cSOAP\u5c31\u662fWeb Service\u65e9\u671f\u6240\u8bbe\u60f3\u7684\u7528\u6765\u5e94\u7528\u95f4\u901a\u4fe1\u7684\u6807\u51c6\u3002\u5e7f\u4e49\u6765\u8bb2\uff0c\u5982\u4eca\u7684RPC\u548cREST\u5b9e\u9645\u4e0a\u4e5f\u80fd\u5b9e\u73b0\u4e0d\u540c\u5e94\u7528\u95f4\u7684\u901a\u4fe1\u3002 1.2 Simple Object Access Protocol \u00b6 WebService\u901a\u8fc7HTTP\u534f\u8bae\u53d1\u9001\u8bf7\u6c42\u548c\u63a5\u6536\u7ed3\u679c\u65f6\uff0c\u53d1\u9001\u7684\u8bf7\u6c42\u5185\u5bb9\u548c\u7ed3\u679c\u5185\u5bb9\u90fd\u91c7\u7528XML\u683c\u5f0f\u5c01\u88c5\uff0c\u5e76\u589e\u52a0\u4e86\u4e00\u4e9b\u7279\u5b9a\u7684HTTP\u6d88\u606f\u5934\uff0c\u4ee5\u8bf4\u660eHTTP\u6d88\u606f\u5934\u7684\u5185\u5bb9\u683c\u5f0f\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684HTTP\u6d88\u606f\u5934\u548cXML\u5185\u5bb9\u683c\u5f0f\u5c31\u662fSOAP\u534f\u8bae\u3002SOAP\u63d0\u4f9b\u4e86\u6807\u51c6\u7684RPC\u65b9\u6cd5\u6765\u8c03\u7528WebService\u3002 SOAP\u534f\u8bae= HTTP\u534f\u8bae+ XML\u6570\u636e\u683c\u5f0f SOAP\u534f\u8bae\u5b9a\u4e49\u4e86SOAP\u6d88\u606f\u7684\u683c\u5f0f\uff0cSOAP\u534f\u8bae\u662f\u57fa\u4e8eHTTP\u534f\u8bae\u7684\uff0cSOAP\u4e5f\u662f\u57fa\u4e8eXML\u548cXSD\u7684\uff0cXML\u662fSOAP\u7684\u6570\u636e\u7f16\u7801\u65b9\u5f0f\u3002 2. SOAP Request/Response \u00b6 Refer to: https://www.cnblogs.com/JeffreySun/archive/2009/12/14/1623766.html POST /WebServices/WeatherWebService.asmx HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; MS Web Services Client Protocol 2.0.50727.3603) Content-Type: text/xml; charset=utf-8 SOAPAction: \"http://WebXml.com.cn/getSupportCity\" Host: www.webxml.com.cn Content-Length: 348 Expect: 100-continue Connection: Keep-Alive <?xml version=\"1.0\" encoding=\"utf-8\"?> < soap:Envelope xmlns:soap = \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd = \"http://www.w3.org/2001/XMLSchema\" > < soap:Body > < getSupportCity xmlns = \"http://WebXml.com.cn/\" > < byProvinceName > \u5e7f\u4e1c </ byProvinceName > </ getSupportCity > </ soap:Body > </ soap:Envelope > \u4e00\u4e2aSOAP\u8bf7\u6c42\u5176\u5b9e\u5c31\u662f\u4e00\u4e2aHTTP\u8bf7\u6c42 \uff0c\u6240\u6709\u7684SOAP \u6d88\u606f\u53d1\u9001\u90fd\u4f7f\u7528HTTP POST \u65b9\u6cd5\u3002\u4f46\u9700\u8981\u52a0\u5165 SOAPAction: \"http://WebXml.com.cn/getSupportCity\" \u7684\u8bf7\u6c42\u5934 \u53ef\u4ee5\u7528\u4e0a\u9762\u6307\u5b9a**SOAPAction\u5934**\u6765\u8868\u793a\u5185\u5bb9\u662fSOAP\u7684\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a Content-Type: application/soap+xml \u6765\u8868\u793a\u5185\u5bb9\u662fSOAP\u7684\u5185\u5bb9\u3002SOAP\u8bf7\u6c42\u4e2d\u6700\u540e\u7684\u90a3\u6bb5XML\u6570\u636e\uff0c\u8fd9\u4e2a\u5c31\u662f\u8bf7\u6c42\u7684\u5177\u4f53\u5185\u5bb9\uff0c\u8fd9\u4e2a\u5c31\u662fSOAP\u89c4\u5b9a\u7684\u8bf7\u6c42\u7684\u6570\u636e\u683c\u5f0f\uff0c\u4e0b\u9762\u518d\u8be6\u7ec6\u5bf9\u683c\u5f0f\u8fdb\u884c\u8bf4\u660e\u3002 \u5176\u4e2d\u7684\\<soap:Body>\u91cc\u9762\u7684\u5185\u5bb9\u5c31\u662f\u8bf7\u6c42\u7684\u5185\u5bb9\uff0c\u8bf7\u6c42\u7684\u65b9\u6cd5\u4e3agetSupportCity\uff0c\u8be5\u65b9\u6cd5\u6709\u4e00\u4e2a\u540d\u4e3abyProvinceName\u7684\u53c2\u6570\uff0c\u53c2\u6570\u7684\u503c\u4e3a\u201c\u5e7f\u4e1c\u201d\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\u518d\u770b\u4e00\u4e0b\u8fd4\u56de\u7684\u5185\u5bb9\uff1a HTTP/1.1 200 OKDate: Mon, 14 Dec 2009 05:55:39 GMTServer: Microsoft-IIS/6.0X-Powered-By: ASP.NETX-AspNet-Version: 2.0.50727Cache-Control: private, max-age=0Content-Type: text/xml; charset=utf-8Content-Length: 1052 <?xml version=\"1.0\" encoding=\"utf-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd= \"http://www.w3.org/2001/XMLSchema\" > <soap:Body> <getSupportCityResponse xmlns= \"http://WebXml.com.cn/\" > <getSupportCityResult> <string> \u5e7f\u5dde (59287) </string><string> \u6df1\u5733 (59493) </string><string> \u6f6e\u5dde (59312) </string><string> \u97f6\u5173 (59082) </string><string> \u6e5b\u6c5f (59658) </string><string> \u60e0\u5dde (59298) </string><string> \u6e05\u8fdc (59280) </string><string> \u4e1c\u839e (59289) </string><string> \u6c5f\u95e8 (59473) </string><string> \u8302\u540d (59659) </string><string> \u8087\u5e86 (59278) </string><string> \u6c55\u5c3e (59501) </string><string> \u6cb3\u6e90 (59293) </string><string> \u63ed\u9633 (59315) </string><string> \u6885\u5dde (59117) </string><string> \u4e2d\u5c71 (59485) </string><string> \u5fb7\u5e86 (59269) </string><string> \u9633\u6c5f (59663) </string><string> \u4e91\u6d6e (59471) </string><string> \u73e0\u6d77 (59488) </string><string> \u6c55\u5934 (59316) </string><string> \u4f5b\u5c71 (59279) </string> </getSupportCityResult> </getSupportCityResponse> </soap:Body> </soap:Envelope> <?xml version=\"1.0\"?> <soap:Envelope xmlns:soap= \"http://www.w3.org/2001/12/soap-envelope\" soap:encodingStyle= \"http://www.w3.org/2001/12/soap-encoding\" > <soap:Header> <m:Trans xmlns:m= \"http://www.w3schools.com/transaction/\" soap:mustUnderstand= \"1\" > 234 </m:Trans> </soap:Header> <soap:Body> <m:GetPrice xmlns:m= \"http://www.w3schools.com/prices\" > <m:Item> Apples </m:Item> </m:GetPrice> </soap:Body> </soap:Envelope> 2.1 Envelope \u00b6 SOAP\u7684\u8bf7\u6c42\u5185\u5bb9\u5fc5\u987b\u4ee5Envelope\u505a\u4e3a\u6839\u8282\u70b9\u3002 xmlns:soap=\"http://www.w3.org/2001/12/soap-envelope\"\uff0c\u4e0d\u80fd\u4fee\u6539\uff0c\u5426\u5219\u4f1a\u51fa\u9519\u3002http://www.w3.org/2001/12/soap-envelope\u91cc\u9762\u6709Envelope\u7684schema\u7684\u76f8\u5173\u5b9a\u4e49\u3002\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u53bb\u8fd9\u4e2a\u94fe\u63a5\u7684\u5185\u5bb9\u3002 soap:encodingStyle=\"http://www.w3.org/2001/12/soap-encoding\"\uff0c\u8fd9\u4e2a\u6307\u5b9a\u4e86\u6570\u636e\u5143\u7d20\u7684\u7c7b\u578b\u3002 2.2 Header \u00b6 \u8fd9\u4e2a\u662f**\u53ef\u9009\u7684**\uff0c\u5982\u679c\u9700\u8981\u6dfb\u52a0Header\u5143\u7d20\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u662fEnvelope\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 Header\u7684\u5185\u5bb9\u5e76\u6ca1\u6709\u4e25\u683c\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u6dfb\u52a0\u4e00\u4e9b\u548c\u5e94\u7528\u7a0b\u5e8f\u76f8\u5173\u7684\u5185\u5bb9\uff0c \u4f46\u662f\u5ba2\u6237\u7aef\u4e00\u5b9a\u8981\u8bb0\u5f97\u5904\u7406\u8fd9\u4e9bHeader\u5143\u7d20\uff0c\u53ef\u4ee5\u52a0\u4e0amustUnderstand\u5f3a\u5236\u8fdb\u884c\u5904\u7406\u3002 2.3 Body \u00b6 \u8fd9\u4e2a\u5c31\u662f\u8bf7\u6c42\u7684\u4e3b\u9898\u5185\u5bb9\u4e86\uff0c**\u8bf7\u6c42\u4ec0\u4e48\u51fd\u6570\uff0c\u53c2\u6570\u662f\u4ec0\u4e48\u7c7b\u578b**\u7b49\u7b49\u90fd\u5728\u8fd9\u91cc\u9762\u6307\u5b9a\u3002 \u7528\u6807\u7b7e\u8868\u793a\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u7528\u5b50\u5143\u7d20\u8868\u793a\u5b83\u7684\u53c2\u6570\u3002 \u5728\u8c03\u7528\u4e2d\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u548c\u8fd4\u56de\u7c7b\u578b\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u6307\u5b9a\uff0c\u56e0\u4e3a\u63d0\u4f9b\u670d\u52a1\u7684\u4e00\u65b9\u81ea\u5df1\u5df2\u7ecf\u89c4\u5b9a\u597d\u4e86\u6570\u636e\u7c7b\u578b\uff0c\u5728\u8c03\u7528\u65f6\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002 3. WSDL \u00b6 Web Services Description Language : \u57fa\u4e8eXML\u7684\uff0c\u76f8\u5f53\u4e8e\u63a5\u53e3\u6587\u6863\uff0c\u53ef\u4ee5\u7528\u6765\u751f\u6210 WebService\u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u63cf\u8ff0Web Service\u53ca\u5176\u51fd\u6570\u3001\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002 WSDL\u662f\u7528\u6765\u63cf\u8ff0WebService\u7684\uff0c\u5b83\u7528XML\u7684\u683c\u5f0f\u63cf\u8ff0\u4e86WebService\u6709\u54ea\u4e9b\u65b9\u6cd5\u3001\u53c2\u6570\u7c7b\u578b\u3001\u8bbf\u95ee\u8def\u5f84\u7b49\u7b49\u3002\u6211\u4eec\u8981\u4f7f\u7528\u4e00\u4e2aWebService\u80af\u5b9a\u9996\u5148\u8981\u83b7\u53d6\u5b83\u7684WSDL\uff0c\u7136\u540e\u53ef\u4ee5\u751f\u6210\u53ef\u4ee5\u4f7f\u7528\u7684\u4ee3\u7406\u7c7b\u3002 3.1 What is WSDL? \u00b6 WSDL\u6587\u4ef6\u4fdd\u5b58\u5728Web\u670d\u52a1\u5668\u4e0a\uff0c\u901a\u8fc7\u4e00\u4e2aurl\u5730\u5740\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u3002\u5ba2\u6237\u7aef\u8981\u8c03\u7528\u4e00\u4e2aWebService\u670d\u52a1\u4e4b\u524d\uff0c\u8981\u77e5\u9053\u8be5\u670d\u52a1\u7684WSDL\u6587\u4ef6\u7684\u5730\u5740\u3002WebService\u670d\u52a1\u63d0\u4f9b\u5546\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u6765\u66b4\u9732\u5b83\u7684WSDL\u6587\u4ef6\u5730\u5740\uff1a 1.\u6ce8\u518c\u5230UDDI\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u88ab\u4eba\u67e5\u627e\uff1b 2.\u76f4\u63a5\u544a\u8bc9\u7ed9\u5ba2\u6237\u7aef\u8c03\u7528\u8005\u3002 1 <?xml version=\"1.0\" encoding=\"utf-8\"?> 2 <wsdl:definitions xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm= \"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:soapenc= \"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:mime= \"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:tns= \"http://tempuri.org/\" xmlns:s= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap12= \"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http= \"http://schemas.xmlsoap.org/wsdl/http/\" targetNamespace= \"http://tempuri.org/\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" > 3 <wsdl:types> 4 <s:schema elementFormDefault= \"qualified\" targetNamespace= \"http://tempuri.org/\" > 5 <s:element name= \"HelloWorld\" > 6 <s:complexType> 7 <s:sequence> 8 <s:element minOccurs= \"1\" maxOccurs= \"1\" name= \"i\" type= \"s:int\" /> 9 </s:sequence> 10 </s:complexType> 11 </s:element> 12 <s:element name= \"HelloWorldResponse\" > 13 <s:complexType> 14 <s:sequence> 15 <s:element minOccurs= \"1\" maxOccurs= \"1\" name= \"HelloWorldResult\" type= \"s:dateTime\" /> 16 </s:sequence> 17 </s:complexType> 18 </s:element> 19 </s:schema> 20 </wsdl:types> 21 <wsdl:message name= \"HelloWorldSoapIn\" > 22 <wsdl:part name= \"parameters\" element= \"tns:HelloWorld\" /> 23 </wsdl:message> 24 <wsdl:message name= \"HelloWorldSoapOut\" > 25 <wsdl:part name= \"parameters\" element= \"tns:HelloWorldResponse\" /> 26 </wsdl:message> 27 <wsdl:portType name= \"ServiceSoap\" > 28 <wsdl:operation name= \"HelloWorld\" > 29 <wsdl:input message= \"tns:HelloWorldSoapIn\" /> 30 <wsdl:output message= \"tns:HelloWorldSoapOut\" /> 31 </wsdl:operation> 32 </wsdl:portType> 33 <wsdl:binding name= \"ServiceSoap\" type= \"tns:ServiceSoap\" > 34 <soap:binding transport= \"http://schemas.xmlsoap.org/soap/http\" /> 35 <wsdl:operation name= \"HelloWorld\" > 36 <soap:operation soapAction= \"http://tempuri.org/HelloWorld\" style= \"document\" /> 37 <wsdl:input> 38 <soap:body use= \"literal\" /> 39 </wsdl:input> 40 <wsdl:output> 41 <soap:body use= \"literal\" /> 42 </wsdl:output> 43 </wsdl:operation> 44 </wsdl:binding> 45 <wsdl:binding name= \"ServiceSoap12\" type= \"tns:ServiceSoap\" > 46 <soap12:binding transport= \"http://schemas.xmlsoap.org/soap/http\" /> 47 <wsdl:operation name= \"HelloWorld\" > 48 <soap12:operation soapAction= \"http://tempuri.org/HelloWorld\" style= \"document\" /> 49 <wsdl:input> 50 <soap12:body use= \"literal\" /> 51 </wsdl:input> 52 <wsdl:output> 53 <soap12:body use= \"literal\" /> 54 </wsdl:output> 55 </wsdl:operation> 56 </wsdl:binding> 57 <wsdl:service name= \"Service\" > 58 <wsdl:port name= \"ServiceSoap\" binding= \"tns:ServiceSoap\" > 59 <soap:address location= \"http://localhost:2206/WebSite1/Service.asmx\" /> 60 </wsdl:port> 61 <wsdl:port name= \"ServiceSoap12\" binding= \"tns:ServiceSoap12\" > 62 <soap12:address location= \"http://localhost:2206/WebSite1/Service.asmx\" /> 63 </wsdl:port> 64 </wsdl:service> 65 </wsdl:definitions> \u4e00\u4e2aWSDL\u6587\u6863\u7531\u51e0\u90e8\u5206\u7ec4\u6210\uff1a types\u3000\u6307\u5b9a\u4e86WebService\u7528\u5230\u7684\u6240\u6709\u6570\u636e\u7c7b\u578b\uff0c\u4e0a\u9762\u7528\u5230\u4e86\u4e24\u79cd\u6570\u636e\u7c7b\u578b\uff0cint\u548cdatetime message\u3000\u3000\u6307\u660e\u4e00\u4e2a\u64cd\u4f5c\u6240\u7528\u5230\u7684\u6570\u636e\u7c7b\u578b\u3002 HelloWorldSoapIn\u662f\u6307HelloWorld\u7684\u8f93\u5165\u64cd\u4f5c\u7528\u5230\u7684\u6570\u636e\u7c7b\u578b\uff0cHelloWorldSoapOut\u662f\u6307HelloWorld\u7684\u8f93\u51fa\u64cd\u4f5c\u7528\u5230\u7684\u6570\u636e\u7c7b\u578b\u3002\u4e8c\u8005\u7684element\u5143\u7d20\u6307\u51fa\u4e86\u4e0etypes\u4e2d\u5bf9\u5e94\u5230\u7684\u5177\u4f53\u7c7b\u578b\u3002 portType\u6307\u51fa\u4e86\u8fd9\u4e2aWebService\u6240\u6709\u652f\u6301\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u8bf4**\u6709\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4f9b\u8c03\u7528**\u3002 \u8fd9\u91cc\u652f\u6301\u4e00\u4e2aHelloWorld\u8c03\u7528\uff0c\u5b83\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5bf9\u5e94\u5230HelloWorldSoapIn\u548cHelloWorldSoapOut\u8fd9\u4e2a\u4e24\u4e2a\u6570\u636e\u7c7b\u578b\u3002 binding soap12:binding\u5143\u7d20\u7684transport\u6307\u660e\u4f20\u8f93\u534f\u8bae\uff0c\u8fd9\u91cc\u662fhttp\u534f\u8bae\u3002 operation \u6307\u660e\u8981\u66b4\u9732\u7ed9\u5916\u754c\u8c03\u7528\u7684\u64cd\u4f5c\u3002 use\u5c5e\u6027\u6307\u5b9a\u8f93\u5165\u8f93\u51fa\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u8fd9\u91cc\u6ca1\u6709\u6307\u5b9a\u7f16\u7801\u3002 services\u3000\u3000\u6307\u5b9a\u670d\u52a1\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u4e3b\u8981\u662f\u6307\u5b9a\u670d\u52a1\u7684\u8bbf\u95ee\u8def\u5f84\u3002 3.2 Principles \u00b6 WebService\u7684\u5de5\u4f5c\u8c03\u7528\u539f\u7406\uff1a \u5bf9\u5ba2\u6237\u7aef\u800c\u8a00\uff0c\u6211\u4eec\u7ed9\u8fd9\u5404\u7c7bWebService\u5ba2\u6237\u7aefAPI\u4f20\u9012WSDL\u6587\u4ef6\u7684url\u5730\u5740\uff0c\u8fd9\u4e9bAPI\u5c31\u4f1a\u521b\u5efa\u51fa\u5e95\u5c42\u7684\u4ee3\u7406\u7c7b\uff0c\u6211\u8c03\u7528\u8fd9\u4e9b\u4ee3\u7406\uff0c\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230webservice\u670d\u52a1\u3002 \u4ee3\u7406\u7c7b\u628a\u5ba2\u6237\u7aef\u7684\u65b9\u6cd5\u8c03\u7528\u53d8\u6210SOAP\u683c\u5f0f\u7684\u8bf7\u6c42\u6570\u636e\u518d\u901a\u8fc7HTTP\u534f\u8bae\u53d1\u51fa\u53bb\uff0c\u5e76\u628a\u63a5\u6536\u5230\u7684SOAP\u6570\u636e\u53d8\u6210\u8fd4\u56de\u503c\u8fd4\u56de\u3002 \u5bf9\u670d\u52a1\u7aef\u800c\u8a00\uff0c\u5404\u7c7bWebService\u6846\u67b6\u7684****\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u5927\u5927\u7684Servlet\uff0c\u5f53\u8fdc\u7a0b\u8c03\u7528\u5ba2\u6237\u7aef\u7ed9\u5b83\u901a\u8fc7http\u534f\u8bae\u53d1\u9001\u8fc7\u6765SOAP\u683c\u5f0f\u7684\u8bf7\u6c42\u6570\u636e\u65f6\uff0c\u5b83\u5206\u6790\u8fd9\u4e2a\u6570\u636e\uff0c\u5c31\u77e5\u9053\u8981\u8c03\u7528\u54ea\u4e2ajava\u7c7b\u7684\u54ea\u4e2a\u65b9\u6cd5\uff0c\u4e8e\u662f\u53bb\u67e5\u627e\u6216\u521b\u5efa\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5176\u65b9\u6cd5\uff0c\u518d\u628a\u65b9\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c\u5305\u88c5\u6210SOAP\u683c\u5f0f\u7684\u6570\u636e\uff0c\u901a\u8fc7http\u54cd\u5e94\u6d88\u606f\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 3.3 SoapUI \u00b6 SoapUI\u662f\u4e13\u95e8\u9488\u5bf9webservice\u63a5\u53e3\u7684\u6d4b\u8bd5\u5de5\u5177\uff0c\u5728\u5bf9\u540c\u4e00\u4e2awebservice\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0cSoapUI\u8868\u73b0\u51fa\u6765\u7684\u6027\u80fd\u66f4\u4f18\u8d8a\u3001\u66f4\u771f\u5b9e\u3001\u66f4\u63a5\u8fd1\u5730\u53cd\u6620\u63a5\u53e3\u7684\u6027\u80fd\u6307\u6807\uff0c\u5bf9\u4e8eSoapUI\u6765\u8bf4\uff0c\u63d0\u4f9b\u7684\u7ed3\u679c\u6570\u636e\u5206\u6790\u4e0d\u5982LR\u90a3\u4e48\u8be6\u7ec6\u4e0e\u5168\u9762\u3002\u76f8\u5f53\u4e8ePostman 4. Call WebService by SOAP in Java \u00b6 4.1 HTTP Request \u00b6 \u4f7f\u7528Apache HTTP Client\uff0c\u6a21\u62df\u53d1\u9001SOAP\u8bf7\u6c42\uff0c\u9700\u8981\u81ea\u5df1\u89e3\u6790XML\u3002 import org.apache.http.HttpEntity ; import org.apache.http.client.config.RequestConfig ; import org.apache.http.client.methods.CloseableHttpResponse ; import org.apache.http.client.methods.HttpPost ; import org.apache.http.entity.StringEntity ; import org.apache.http.impl.client.CloseableHttpClient ; import org.apache.http.impl.client.HttpClientBuilder ; import org.apache.http.util.EntityUtils ; import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.DocumentHelper ; import org.dom4j.Element ; import java.io.IOException ; import java.nio.charset.StandardCharsets ; import java.util.List ; public class WebServiceTest { public static void main ( String [] args ) throws IOException { String url = \"http://www.webxml.com.cn/WebServices/WeatherWebService.asmx?wsdl\" ; // \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u62fc\u63a5xml StringBuilder xmlData = new StringBuilder ( \"\" ); xmlData . append ( \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" ); xmlData . append ( \"<soapenv:Envelope \" + \" xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' \" + \" xmlns:q0='http://WebXml.com.cn/' \" + \" xmlns:xsd='http://www.w3.org/2001/XMLSchema' \" + \" xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' >\" ); xmlData . append ( \"<soapenv:Body>\" ); xmlData . append ( \"<q0:getWeatherbyCityName>\" ); xmlData . append ( \"<q0:theCityName>\u4e0a\u6d77</q0:theCityName> \" ); xmlData . append ( \"</q0:getWeatherbyCityName>\" ); xmlData . append ( \"</soapenv:Body>\" ); xmlData . append ( \"</soapenv:Envelope>\" ); String postSoap = doPostSoap ( url , xmlData . toString (), \"\" ); // \u53bb\u9664\u8f6c\u4e49\u5b57\u7b26 /*String unPostSoap = StringEscapeUtils.unescapeXml(postSoap); System.out.println(unPostSoap);*/ } //\u4f7f\u7528SOAP1.1\u53d1\u9001\u6d88\u606f public static String doPostSoap ( String postUrl , String soapXml , String soapAction ) throws IOException { String retStr = \"\" ; // \u521b\u5efaHttpClientBuilder HttpClientBuilder httpClientBuilder = HttpClientBuilder . create (); // HttpClient CloseableHttpClient closeableHttpClient = httpClientBuilder . build (); HttpPost httpPost = new HttpPost ( postUrl ); // \u8bbe\u7f6e\u8bf7\u6c42\u548c\u4f20\u8f93\u8d85\u65f6\u65f6\u95f4 RequestConfig requestConfig = RequestConfig . custom (). setSocketTimeout ( 6000 ) . setConnectTimeout ( 6000 ). build (); //httpPost.setConfig(requestConfig); try { httpPost . setHeader ( \"Content-Type\" , \"text/xml;charset=utf8\" ); //httpPost.setHeader(\"SOAPAction\", soapAction); StringEntity requestEntity = new StringEntity ( soapXml , StandardCharsets . UTF_8 ); httpPost . setEntity ( requestEntity ); CloseableHttpResponse response = closeableHttpClient . execute ( httpPost ); HttpEntity entity = response . getEntity (); // InputStream content = entity.getContent(); // String result = IOUtils.toString(content); //Document dc = strXmlToDocument(result); if ( entity != null ) { // \u6253\u5370\u54cd\u5e94\u5185\u5bb9 retStr = EntityUtils . toString ( entity , \"UTF-8\" ); System . out . println ( \"response:\" + retStr ); } // \u91ca\u653e\u8d44\u6e90 closeableHttpClient . close (); } catch ( Exception e ) { e . printStackTrace (); } return retStr ; } public static Document strXmlToDocument ( String parseStrXml ){ Document document = null ; try { document = DocumentHelper . parseText ( parseStrXml ); Element root = document . getRootElement (); List < Element > list = root . elements (); getElement ( list ); } catch ( DocumentException e ) { e . printStackTrace (); } return document ; } // \u9012\u5f52\u8bfb\u53d6\u5b50\u5143\u7d20 private static void getElement ( List < Element > sonElemetList ) { // Map<String,String> map = new HashMap<String, String>(); for ( Element sonElement : sonElemetList ) { if ( sonElement . elements (). size () != 0 ) { System . out . println ( sonElement . getName () + \":\" ); getElement ( sonElement . elements ()); } else { System . out . println ( sonElement . getName () + \":\" + sonElement . getText ()); } } } } 4.2 Generate Local Client Code \u00b6 \u6709\u5f88\u591a\u6846\u67b6\u53ef\u4ee5\u5b9e\u73b0\u3002\u5e38\u89c1\u7684\u6709Apache CXF\uff0cApache Axis2\uff0cSpring-WS \u6b64\u5904\u4f7f\u7528\u7684\u662fSpring-WS Consuming a SOAP web service 4.2.1 Add dependencies \u00b6 <dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web-services </artifactId> <exclusions> <exclusion> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-tomcat </artifactId> </exclusion> </exclusions> </dependency> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> <!-- tag::wsdl[] --> <plugin> <groupId> org.jvnet.jaxb2.maven2 </groupId> <artifactId> maven-jaxb2-plugin </artifactId> <version> 0.14.0 </version> <executions> <execution> <goals> <goal> generate </goal> </goals> </execution> </executions> <configuration> <schemaLanguage> WSDL </schemaLanguage> <generatePackage> com.example.consumingwebservice.wsdl </generatePackage> <schemas> <schema> <url> http://localhost:8080/ws/countries.wsdl </url> </schema> </schemas> </configuration> </plugin> <!-- end::wsdl[] --> </plugins> </build> 4.2.2 Generate Domain Objects Based on a WSDL \u00b6 Use maven-jaxb2-plugin generate code. The generated code is at target/generated-sources 4.2.3 Create a Client \u00b6 package com.example.consumingwebservice ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.springframework.ws.client.core.support.WebServiceGatewaySupport ; import org.springframework.ws.soap.client.core.SoapActionCallback ; import com.example.consumingwebservice.wsdl.GetCountryRequest ; import com.example.consumingwebservice.wsdl.GetCountryResponse ; public class CountryClient extends WebServiceGatewaySupport { private static final Logger log = LoggerFactory . getLogger ( CountryClient . class ); public GetCountryResponse getCountry ( String country ) { GetCountryRequest request = new GetCountryRequest (); request . setName ( country ); log . info ( \"Requesting location for \" + country ); GetCountryResponse response = ( GetCountryResponse ) getWebServiceTemplate () . marshalSendAndReceive ( \"http://localhost:8080/ws/countries\" , request , new SoapActionCallback ( \"http://spring.io/guides/gs-producing-web-service/GetCountryRequest\" )); return response ; } } 4.2.4 Configuring Web Service Components \u00b6 package com.example.consumingwebservice ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.oxm.jaxb.Jaxb2Marshaller ; @Configuration public class CountryConfiguration { @Bean public Jaxb2Marshaller marshaller () { Jaxb2Marshaller marshaller = new Jaxb2Marshaller (); // this package must match the package in the <generatePackage> specified in // pom.xml marshaller . setContextPath ( \"com.example.consumingwebservice.wsdl\" ); return marshaller ; } @Bean public CountryClient countryClient ( Jaxb2Marshaller marshaller ) { CountryClient client = new CountryClient (); client . setDefaultUri ( \"http://localhost:8080/ws\" ); client . setMarshaller ( marshaller ); client . setUnmarshaller ( marshaller ); return client ; } } 4.2.5 Use Client To Call Method you need \u00b6 new Client\u7684\u5b9e\u4f8b\uff0c\u548c\u8c03\u7528\u672c\u5730\u4ee3\u7801\u4e00\u6837\uff0c\u8c03\u7528WSDL\u4e2d\u53d1\u5e03\u7684\u65b9\u6cd5\u3002 \u53ef\u4ee5\u5bf9Request\u548cResponse\u505a\u4e00\u4e9b\u5c01\u88c5","title":"SOAP and Web Service"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#introduction-to-soap-and-web-service","text":"","title":"Introduction to SOAP and Web Service"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#1-what-is-webservice-and-soap","text":"","title":"1. What is WebService and SOAP?"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#11-web-service","text":"Web Service\uff0c\u662f\u4e3a\u4e86\u4e0d\u540c\u7684\u5e73\u53f0\u7684\u4e0d\u540c\u8bed\u8a00\u5199\u6210\u7684\u4e0d\u540c\u670d\u52a1\u8fdb\u884c\u7684\u901a\u4fe1\u7684\u4e00\u4e2a\u6807\u51c6\uff0c\u4e00\u4e2aWeb\u5e94\u7528\uff0c\u53ef\u4ee5\u751f\u6210Web Service\u7684Server\u7aef\uff0c\u5176\u4ed6\u5e94\u7528\u901a\u8fc7\u67d0\u79cd\u534f\u8bae\u6765\u8c03\u7528\u8be5\u5e94\u7528\u7684API\uff0c\u4ece\u800c\u83b7\u53d6\u6240\u9700\u7684\u6570\u636e\u3002 \u800cSOAP\u5c31\u662fWeb Service\u65e9\u671f\u6240\u8bbe\u60f3\u7684\u7528\u6765\u5e94\u7528\u95f4\u901a\u4fe1\u7684\u6807\u51c6\u3002\u5e7f\u4e49\u6765\u8bb2\uff0c\u5982\u4eca\u7684RPC\u548cREST\u5b9e\u9645\u4e0a\u4e5f\u80fd\u5b9e\u73b0\u4e0d\u540c\u5e94\u7528\u95f4\u7684\u901a\u4fe1\u3002","title":"1.1 Web Service"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#12-simple-object-access-protocol","text":"WebService\u901a\u8fc7HTTP\u534f\u8bae\u53d1\u9001\u8bf7\u6c42\u548c\u63a5\u6536\u7ed3\u679c\u65f6\uff0c\u53d1\u9001\u7684\u8bf7\u6c42\u5185\u5bb9\u548c\u7ed3\u679c\u5185\u5bb9\u90fd\u91c7\u7528XML\u683c\u5f0f\u5c01\u88c5\uff0c\u5e76\u589e\u52a0\u4e86\u4e00\u4e9b\u7279\u5b9a\u7684HTTP\u6d88\u606f\u5934\uff0c\u4ee5\u8bf4\u660eHTTP\u6d88\u606f\u5934\u7684\u5185\u5bb9\u683c\u5f0f\uff0c\u8fd9\u4e9b\u7279\u5b9a\u7684HTTP\u6d88\u606f\u5934\u548cXML\u5185\u5bb9\u683c\u5f0f\u5c31\u662fSOAP\u534f\u8bae\u3002SOAP\u63d0\u4f9b\u4e86\u6807\u51c6\u7684RPC\u65b9\u6cd5\u6765\u8c03\u7528WebService\u3002 SOAP\u534f\u8bae= HTTP\u534f\u8bae+ XML\u6570\u636e\u683c\u5f0f SOAP\u534f\u8bae\u5b9a\u4e49\u4e86SOAP\u6d88\u606f\u7684\u683c\u5f0f\uff0cSOAP\u534f\u8bae\u662f\u57fa\u4e8eHTTP\u534f\u8bae\u7684\uff0cSOAP\u4e5f\u662f\u57fa\u4e8eXML\u548cXSD\u7684\uff0cXML\u662fSOAP\u7684\u6570\u636e\u7f16\u7801\u65b9\u5f0f\u3002","title":"1.2 Simple Object Access Protocol"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#2-soap-requestresponse","text":"Refer to: https://www.cnblogs.com/JeffreySun/archive/2009/12/14/1623766.html POST /WebServices/WeatherWebService.asmx HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; MS Web Services Client Protocol 2.0.50727.3603) Content-Type: text/xml; charset=utf-8 SOAPAction: \"http://WebXml.com.cn/getSupportCity\" Host: www.webxml.com.cn Content-Length: 348 Expect: 100-continue Connection: Keep-Alive <?xml version=\"1.0\" encoding=\"utf-8\"?> < soap:Envelope xmlns:soap = \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd = \"http://www.w3.org/2001/XMLSchema\" > < soap:Body > < getSupportCity xmlns = \"http://WebXml.com.cn/\" > < byProvinceName > \u5e7f\u4e1c </ byProvinceName > </ getSupportCity > </ soap:Body > </ soap:Envelope > \u4e00\u4e2aSOAP\u8bf7\u6c42\u5176\u5b9e\u5c31\u662f\u4e00\u4e2aHTTP\u8bf7\u6c42 \uff0c\u6240\u6709\u7684SOAP \u6d88\u606f\u53d1\u9001\u90fd\u4f7f\u7528HTTP POST \u65b9\u6cd5\u3002\u4f46\u9700\u8981\u52a0\u5165 SOAPAction: \"http://WebXml.com.cn/getSupportCity\" \u7684\u8bf7\u6c42\u5934 \u53ef\u4ee5\u7528\u4e0a\u9762\u6307\u5b9a**SOAPAction\u5934**\u6765\u8868\u793a\u5185\u5bb9\u662fSOAP\u7684\u5185\u5bb9\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a Content-Type: application/soap+xml \u6765\u8868\u793a\u5185\u5bb9\u662fSOAP\u7684\u5185\u5bb9\u3002SOAP\u8bf7\u6c42\u4e2d\u6700\u540e\u7684\u90a3\u6bb5XML\u6570\u636e\uff0c\u8fd9\u4e2a\u5c31\u662f\u8bf7\u6c42\u7684\u5177\u4f53\u5185\u5bb9\uff0c\u8fd9\u4e2a\u5c31\u662fSOAP\u89c4\u5b9a\u7684\u8bf7\u6c42\u7684\u6570\u636e\u683c\u5f0f\uff0c\u4e0b\u9762\u518d\u8be6\u7ec6\u5bf9\u683c\u5f0f\u8fdb\u884c\u8bf4\u660e\u3002 \u5176\u4e2d\u7684\\<soap:Body>\u91cc\u9762\u7684\u5185\u5bb9\u5c31\u662f\u8bf7\u6c42\u7684\u5185\u5bb9\uff0c\u8bf7\u6c42\u7684\u65b9\u6cd5\u4e3agetSupportCity\uff0c\u8be5\u65b9\u6cd5\u6709\u4e00\u4e2a\u540d\u4e3abyProvinceName\u7684\u53c2\u6570\uff0c\u53c2\u6570\u7684\u503c\u4e3a\u201c\u5e7f\u4e1c\u201d\u8fd9\u4e2a\u5b57\u7b26\u4e32\u3002\u518d\u770b\u4e00\u4e0b\u8fd4\u56de\u7684\u5185\u5bb9\uff1a HTTP/1.1 200 OKDate: Mon, 14 Dec 2009 05:55:39 GMTServer: Microsoft-IIS/6.0X-Powered-By: ASP.NETX-AspNet-Version: 2.0.50727Cache-Control: private, max-age=0Content-Type: text/xml; charset=utf-8Content-Length: 1052 <?xml version=\"1.0\" encoding=\"utf-8\"?> <soap:Envelope xmlns:soap= \"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd= \"http://www.w3.org/2001/XMLSchema\" > <soap:Body> <getSupportCityResponse xmlns= \"http://WebXml.com.cn/\" > <getSupportCityResult> <string> \u5e7f\u5dde (59287) </string><string> \u6df1\u5733 (59493) </string><string> \u6f6e\u5dde (59312) </string><string> \u97f6\u5173 (59082) </string><string> \u6e5b\u6c5f (59658) </string><string> \u60e0\u5dde (59298) </string><string> \u6e05\u8fdc (59280) </string><string> \u4e1c\u839e (59289) </string><string> \u6c5f\u95e8 (59473) </string><string> \u8302\u540d (59659) </string><string> \u8087\u5e86 (59278) </string><string> \u6c55\u5c3e (59501) </string><string> \u6cb3\u6e90 (59293) </string><string> \u63ed\u9633 (59315) </string><string> \u6885\u5dde (59117) </string><string> \u4e2d\u5c71 (59485) </string><string> \u5fb7\u5e86 (59269) </string><string> \u9633\u6c5f (59663) </string><string> \u4e91\u6d6e (59471) </string><string> \u73e0\u6d77 (59488) </string><string> \u6c55\u5934 (59316) </string><string> \u4f5b\u5c71 (59279) </string> </getSupportCityResult> </getSupportCityResponse> </soap:Body> </soap:Envelope> <?xml version=\"1.0\"?> <soap:Envelope xmlns:soap= \"http://www.w3.org/2001/12/soap-envelope\" soap:encodingStyle= \"http://www.w3.org/2001/12/soap-encoding\" > <soap:Header> <m:Trans xmlns:m= \"http://www.w3schools.com/transaction/\" soap:mustUnderstand= \"1\" > 234 </m:Trans> </soap:Header> <soap:Body> <m:GetPrice xmlns:m= \"http://www.w3schools.com/prices\" > <m:Item> Apples </m:Item> </m:GetPrice> </soap:Body> </soap:Envelope>","title":"2. SOAP Request/Response"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#21-envelope","text":"SOAP\u7684\u8bf7\u6c42\u5185\u5bb9\u5fc5\u987b\u4ee5Envelope\u505a\u4e3a\u6839\u8282\u70b9\u3002 xmlns:soap=\"http://www.w3.org/2001/12/soap-envelope\"\uff0c\u4e0d\u80fd\u4fee\u6539\uff0c\u5426\u5219\u4f1a\u51fa\u9519\u3002http://www.w3.org/2001/12/soap-envelope\u91cc\u9762\u6709Envelope\u7684schema\u7684\u76f8\u5173\u5b9a\u4e49\u3002\u6709\u5174\u8da3\u7684\u53ef\u4ee5\u53bb\u8fd9\u4e2a\u94fe\u63a5\u7684\u5185\u5bb9\u3002 soap:encodingStyle=\"http://www.w3.org/2001/12/soap-encoding\"\uff0c\u8fd9\u4e2a\u6307\u5b9a\u4e86\u6570\u636e\u5143\u7d20\u7684\u7c7b\u578b\u3002","title":"2.1 Envelope"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#22-header","text":"\u8fd9\u4e2a\u662f**\u53ef\u9009\u7684**\uff0c\u5982\u679c\u9700\u8981\u6dfb\u52a0Header\u5143\u7d20\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u662fEnvelope\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 Header\u7684\u5185\u5bb9\u5e76\u6ca1\u6709\u4e25\u683c\u7684\u9650\u5236\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u6dfb\u52a0\u4e00\u4e9b\u548c\u5e94\u7528\u7a0b\u5e8f\u76f8\u5173\u7684\u5185\u5bb9\uff0c \u4f46\u662f\u5ba2\u6237\u7aef\u4e00\u5b9a\u8981\u8bb0\u5f97\u5904\u7406\u8fd9\u4e9bHeader\u5143\u7d20\uff0c\u53ef\u4ee5\u52a0\u4e0amustUnderstand\u5f3a\u5236\u8fdb\u884c\u5904\u7406\u3002","title":"2.2 Header"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#23-body","text":"\u8fd9\u4e2a\u5c31\u662f\u8bf7\u6c42\u7684\u4e3b\u9898\u5185\u5bb9\u4e86\uff0c**\u8bf7\u6c42\u4ec0\u4e48\u51fd\u6570\uff0c\u53c2\u6570\u662f\u4ec0\u4e48\u7c7b\u578b**\u7b49\u7b49\u90fd\u5728\u8fd9\u91cc\u9762\u6307\u5b9a\u3002 \u7528\u6807\u7b7e\u8868\u793a\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u7528\u5b50\u5143\u7d20\u8868\u793a\u5b83\u7684\u53c2\u6570\u3002 \u5728\u8c03\u7528\u4e2d\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\u548c\u8fd4\u56de\u7c7b\u578b\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u6307\u5b9a\uff0c\u56e0\u4e3a\u63d0\u4f9b\u670d\u52a1\u7684\u4e00\u65b9\u81ea\u5df1\u5df2\u7ecf\u89c4\u5b9a\u597d\u4e86\u6570\u636e\u7c7b\u578b\uff0c\u5728\u8c03\u7528\u65f6\u6307\u5b9a\u6570\u636e\u7c7b\u578b\u6ca1\u6709\u4efb\u4f55\u610f\u4e49\u3002","title":"2.3 Body"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#3-wsdl","text":"Web Services Description Language : \u57fa\u4e8eXML\u7684\uff0c\u76f8\u5f53\u4e8e\u63a5\u53e3\u6587\u6863\uff0c\u53ef\u4ee5\u7528\u6765\u751f\u6210 WebService\u5ba2\u6237\u7aef\uff0c\u7528\u4e8e\u63cf\u8ff0Web Service\u53ca\u5176\u51fd\u6570\u3001\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002 WSDL\u662f\u7528\u6765\u63cf\u8ff0WebService\u7684\uff0c\u5b83\u7528XML\u7684\u683c\u5f0f\u63cf\u8ff0\u4e86WebService\u6709\u54ea\u4e9b\u65b9\u6cd5\u3001\u53c2\u6570\u7c7b\u578b\u3001\u8bbf\u95ee\u8def\u5f84\u7b49\u7b49\u3002\u6211\u4eec\u8981\u4f7f\u7528\u4e00\u4e2aWebService\u80af\u5b9a\u9996\u5148\u8981\u83b7\u53d6\u5b83\u7684WSDL\uff0c\u7136\u540e\u53ef\u4ee5\u751f\u6210\u53ef\u4ee5\u4f7f\u7528\u7684\u4ee3\u7406\u7c7b\u3002","title":"3. WSDL"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#31-what-is-wsdl","text":"WSDL\u6587\u4ef6\u4fdd\u5b58\u5728Web\u670d\u52a1\u5668\u4e0a\uff0c\u901a\u8fc7\u4e00\u4e2aurl\u5730\u5740\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230\u5b83\u3002\u5ba2\u6237\u7aef\u8981\u8c03\u7528\u4e00\u4e2aWebService\u670d\u52a1\u4e4b\u524d\uff0c\u8981\u77e5\u9053\u8be5\u670d\u52a1\u7684WSDL\u6587\u4ef6\u7684\u5730\u5740\u3002WebService\u670d\u52a1\u63d0\u4f9b\u5546\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u6765\u66b4\u9732\u5b83\u7684WSDL\u6587\u4ef6\u5730\u5740\uff1a 1.\u6ce8\u518c\u5230UDDI\u670d\u52a1\u5668\uff0c\u4ee5\u4fbf\u88ab\u4eba\u67e5\u627e\uff1b 2.\u76f4\u63a5\u544a\u8bc9\u7ed9\u5ba2\u6237\u7aef\u8c03\u7528\u8005\u3002 1 <?xml version=\"1.0\" encoding=\"utf-8\"?> 2 <wsdl:definitions xmlns:soap= \"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tm= \"http://microsoft.com/wsdl/mime/textMatching/\" xmlns:soapenc= \"http://schemas.xmlsoap.org/soap/encoding/\" xmlns:mime= \"http://schemas.xmlsoap.org/wsdl/mime/\" xmlns:tns= \"http://tempuri.org/\" xmlns:s= \"http://www.w3.org/2001/XMLSchema\" xmlns:soap12= \"http://schemas.xmlsoap.org/wsdl/soap12/\" xmlns:http= \"http://schemas.xmlsoap.org/wsdl/http/\" targetNamespace= \"http://tempuri.org/\" xmlns:wsdl= \"http://schemas.xmlsoap.org/wsdl/\" > 3 <wsdl:types> 4 <s:schema elementFormDefault= \"qualified\" targetNamespace= \"http://tempuri.org/\" > 5 <s:element name= \"HelloWorld\" > 6 <s:complexType> 7 <s:sequence> 8 <s:element minOccurs= \"1\" maxOccurs= \"1\" name= \"i\" type= \"s:int\" /> 9 </s:sequence> 10 </s:complexType> 11 </s:element> 12 <s:element name= \"HelloWorldResponse\" > 13 <s:complexType> 14 <s:sequence> 15 <s:element minOccurs= \"1\" maxOccurs= \"1\" name= \"HelloWorldResult\" type= \"s:dateTime\" /> 16 </s:sequence> 17 </s:complexType> 18 </s:element> 19 </s:schema> 20 </wsdl:types> 21 <wsdl:message name= \"HelloWorldSoapIn\" > 22 <wsdl:part name= \"parameters\" element= \"tns:HelloWorld\" /> 23 </wsdl:message> 24 <wsdl:message name= \"HelloWorldSoapOut\" > 25 <wsdl:part name= \"parameters\" element= \"tns:HelloWorldResponse\" /> 26 </wsdl:message> 27 <wsdl:portType name= \"ServiceSoap\" > 28 <wsdl:operation name= \"HelloWorld\" > 29 <wsdl:input message= \"tns:HelloWorldSoapIn\" /> 30 <wsdl:output message= \"tns:HelloWorldSoapOut\" /> 31 </wsdl:operation> 32 </wsdl:portType> 33 <wsdl:binding name= \"ServiceSoap\" type= \"tns:ServiceSoap\" > 34 <soap:binding transport= \"http://schemas.xmlsoap.org/soap/http\" /> 35 <wsdl:operation name= \"HelloWorld\" > 36 <soap:operation soapAction= \"http://tempuri.org/HelloWorld\" style= \"document\" /> 37 <wsdl:input> 38 <soap:body use= \"literal\" /> 39 </wsdl:input> 40 <wsdl:output> 41 <soap:body use= \"literal\" /> 42 </wsdl:output> 43 </wsdl:operation> 44 </wsdl:binding> 45 <wsdl:binding name= \"ServiceSoap12\" type= \"tns:ServiceSoap\" > 46 <soap12:binding transport= \"http://schemas.xmlsoap.org/soap/http\" /> 47 <wsdl:operation name= \"HelloWorld\" > 48 <soap12:operation soapAction= \"http://tempuri.org/HelloWorld\" style= \"document\" /> 49 <wsdl:input> 50 <soap12:body use= \"literal\" /> 51 </wsdl:input> 52 <wsdl:output> 53 <soap12:body use= \"literal\" /> 54 </wsdl:output> 55 </wsdl:operation> 56 </wsdl:binding> 57 <wsdl:service name= \"Service\" > 58 <wsdl:port name= \"ServiceSoap\" binding= \"tns:ServiceSoap\" > 59 <soap:address location= \"http://localhost:2206/WebSite1/Service.asmx\" /> 60 </wsdl:port> 61 <wsdl:port name= \"ServiceSoap12\" binding= \"tns:ServiceSoap12\" > 62 <soap12:address location= \"http://localhost:2206/WebSite1/Service.asmx\" /> 63 </wsdl:port> 64 </wsdl:service> 65 </wsdl:definitions> \u4e00\u4e2aWSDL\u6587\u6863\u7531\u51e0\u90e8\u5206\u7ec4\u6210\uff1a types\u3000\u6307\u5b9a\u4e86WebService\u7528\u5230\u7684\u6240\u6709\u6570\u636e\u7c7b\u578b\uff0c\u4e0a\u9762\u7528\u5230\u4e86\u4e24\u79cd\u6570\u636e\u7c7b\u578b\uff0cint\u548cdatetime message\u3000\u3000\u6307\u660e\u4e00\u4e2a\u64cd\u4f5c\u6240\u7528\u5230\u7684\u6570\u636e\u7c7b\u578b\u3002 HelloWorldSoapIn\u662f\u6307HelloWorld\u7684\u8f93\u5165\u64cd\u4f5c\u7528\u5230\u7684\u6570\u636e\u7c7b\u578b\uff0cHelloWorldSoapOut\u662f\u6307HelloWorld\u7684\u8f93\u51fa\u64cd\u4f5c\u7528\u5230\u7684\u6570\u636e\u7c7b\u578b\u3002\u4e8c\u8005\u7684element\u5143\u7d20\u6307\u51fa\u4e86\u4e0etypes\u4e2d\u5bf9\u5e94\u5230\u7684\u5177\u4f53\u7c7b\u578b\u3002 portType\u6307\u51fa\u4e86\u8fd9\u4e2aWebService\u6240\u6709\u652f\u6301\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u8bf4**\u6709\u54ea\u4e9b\u65b9\u6cd5\u53ef\u4f9b\u8c03\u7528**\u3002 \u8fd9\u91cc\u652f\u6301\u4e00\u4e2aHelloWorld\u8c03\u7528\uff0c\u5b83\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5bf9\u5e94\u5230HelloWorldSoapIn\u548cHelloWorldSoapOut\u8fd9\u4e2a\u4e24\u4e2a\u6570\u636e\u7c7b\u578b\u3002 binding soap12:binding\u5143\u7d20\u7684transport\u6307\u660e\u4f20\u8f93\u534f\u8bae\uff0c\u8fd9\u91cc\u662fhttp\u534f\u8bae\u3002 operation \u6307\u660e\u8981\u66b4\u9732\u7ed9\u5916\u754c\u8c03\u7528\u7684\u64cd\u4f5c\u3002 use\u5c5e\u6027\u6307\u5b9a\u8f93\u5165\u8f93\u51fa\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u8fd9\u91cc\u6ca1\u6709\u6307\u5b9a\u7f16\u7801\u3002 services\u3000\u3000\u6307\u5b9a\u670d\u52a1\u7684\u4e00\u4e9b\u4fe1\u606f\uff0c\u4e3b\u8981\u662f\u6307\u5b9a\u670d\u52a1\u7684\u8bbf\u95ee\u8def\u5f84\u3002","title":"3.1 What is WSDL?"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#32-principles","text":"WebService\u7684\u5de5\u4f5c\u8c03\u7528\u539f\u7406\uff1a \u5bf9\u5ba2\u6237\u7aef\u800c\u8a00\uff0c\u6211\u4eec\u7ed9\u8fd9\u5404\u7c7bWebService\u5ba2\u6237\u7aefAPI\u4f20\u9012WSDL\u6587\u4ef6\u7684url\u5730\u5740\uff0c\u8fd9\u4e9bAPI\u5c31\u4f1a\u521b\u5efa\u51fa\u5e95\u5c42\u7684\u4ee3\u7406\u7c7b\uff0c\u6211\u8c03\u7528\u8fd9\u4e9b\u4ee3\u7406\uff0c\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5230webservice\u670d\u52a1\u3002 \u4ee3\u7406\u7c7b\u628a\u5ba2\u6237\u7aef\u7684\u65b9\u6cd5\u8c03\u7528\u53d8\u6210SOAP\u683c\u5f0f\u7684\u8bf7\u6c42\u6570\u636e\u518d\u901a\u8fc7HTTP\u534f\u8bae\u53d1\u51fa\u53bb\uff0c\u5e76\u628a\u63a5\u6536\u5230\u7684SOAP\u6570\u636e\u53d8\u6210\u8fd4\u56de\u503c\u8fd4\u56de\u3002 \u5bf9\u670d\u52a1\u7aef\u800c\u8a00\uff0c\u5404\u7c7bWebService\u6846\u67b6\u7684****\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u5927\u5927\u7684Servlet\uff0c\u5f53\u8fdc\u7a0b\u8c03\u7528\u5ba2\u6237\u7aef\u7ed9\u5b83\u901a\u8fc7http\u534f\u8bae\u53d1\u9001\u8fc7\u6765SOAP\u683c\u5f0f\u7684\u8bf7\u6c42\u6570\u636e\u65f6\uff0c\u5b83\u5206\u6790\u8fd9\u4e2a\u6570\u636e\uff0c\u5c31\u77e5\u9053\u8981\u8c03\u7528\u54ea\u4e2ajava\u7c7b\u7684\u54ea\u4e2a\u65b9\u6cd5\uff0c\u4e8e\u662f\u53bb\u67e5\u627e\u6216\u521b\u5efa\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5176\u65b9\u6cd5\uff0c\u518d\u628a\u65b9\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c\u5305\u88c5\u6210SOAP\u683c\u5f0f\u7684\u6570\u636e\uff0c\u901a\u8fc7http\u54cd\u5e94\u6d88\u606f\u56de\u7ed9\u5ba2\u6237\u7aef\u3002","title":"3.2 Principles"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#33-soapui","text":"SoapUI\u662f\u4e13\u95e8\u9488\u5bf9webservice\u63a5\u53e3\u7684\u6d4b\u8bd5\u5de5\u5177\uff0c\u5728\u5bf9\u540c\u4e00\u4e2awebservice\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u65f6\uff0cSoapUI\u8868\u73b0\u51fa\u6765\u7684\u6027\u80fd\u66f4\u4f18\u8d8a\u3001\u66f4\u771f\u5b9e\u3001\u66f4\u63a5\u8fd1\u5730\u53cd\u6620\u63a5\u53e3\u7684\u6027\u80fd\u6307\u6807\uff0c\u5bf9\u4e8eSoapUI\u6765\u8bf4\uff0c\u63d0\u4f9b\u7684\u7ed3\u679c\u6570\u636e\u5206\u6790\u4e0d\u5982LR\u90a3\u4e48\u8be6\u7ec6\u4e0e\u5168\u9762\u3002\u76f8\u5f53\u4e8ePostman","title":"3.3 SoapUI"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#4-call-webservice-by-soap-in-java","text":"","title":"4. Call WebService by SOAP in Java"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#41-http-request","text":"\u4f7f\u7528Apache HTTP Client\uff0c\u6a21\u62df\u53d1\u9001SOAP\u8bf7\u6c42\uff0c\u9700\u8981\u81ea\u5df1\u89e3\u6790XML\u3002 import org.apache.http.HttpEntity ; import org.apache.http.client.config.RequestConfig ; import org.apache.http.client.methods.CloseableHttpResponse ; import org.apache.http.client.methods.HttpPost ; import org.apache.http.entity.StringEntity ; import org.apache.http.impl.client.CloseableHttpClient ; import org.apache.http.impl.client.HttpClientBuilder ; import org.apache.http.util.EntityUtils ; import org.dom4j.Document ; import org.dom4j.DocumentException ; import org.dom4j.DocumentHelper ; import org.dom4j.Element ; import java.io.IOException ; import java.nio.charset.StandardCharsets ; import java.util.List ; public class WebServiceTest { public static void main ( String [] args ) throws IOException { String url = \"http://www.webxml.com.cn/WebServices/WeatherWebService.asmx?wsdl\" ; // \u6839\u636e\u5b9e\u9645\u60c5\u51b5\u62fc\u63a5xml StringBuilder xmlData = new StringBuilder ( \"\" ); xmlData . append ( \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\" ); xmlData . append ( \"<soapenv:Envelope \" + \" xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' \" + \" xmlns:q0='http://WebXml.com.cn/' \" + \" xmlns:xsd='http://www.w3.org/2001/XMLSchema' \" + \" xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' >\" ); xmlData . append ( \"<soapenv:Body>\" ); xmlData . append ( \"<q0:getWeatherbyCityName>\" ); xmlData . append ( \"<q0:theCityName>\u4e0a\u6d77</q0:theCityName> \" ); xmlData . append ( \"</q0:getWeatherbyCityName>\" ); xmlData . append ( \"</soapenv:Body>\" ); xmlData . append ( \"</soapenv:Envelope>\" ); String postSoap = doPostSoap ( url , xmlData . toString (), \"\" ); // \u53bb\u9664\u8f6c\u4e49\u5b57\u7b26 /*String unPostSoap = StringEscapeUtils.unescapeXml(postSoap); System.out.println(unPostSoap);*/ } //\u4f7f\u7528SOAP1.1\u53d1\u9001\u6d88\u606f public static String doPostSoap ( String postUrl , String soapXml , String soapAction ) throws IOException { String retStr = \"\" ; // \u521b\u5efaHttpClientBuilder HttpClientBuilder httpClientBuilder = HttpClientBuilder . create (); // HttpClient CloseableHttpClient closeableHttpClient = httpClientBuilder . build (); HttpPost httpPost = new HttpPost ( postUrl ); // \u8bbe\u7f6e\u8bf7\u6c42\u548c\u4f20\u8f93\u8d85\u65f6\u65f6\u95f4 RequestConfig requestConfig = RequestConfig . custom (). setSocketTimeout ( 6000 ) . setConnectTimeout ( 6000 ). build (); //httpPost.setConfig(requestConfig); try { httpPost . setHeader ( \"Content-Type\" , \"text/xml;charset=utf8\" ); //httpPost.setHeader(\"SOAPAction\", soapAction); StringEntity requestEntity = new StringEntity ( soapXml , StandardCharsets . UTF_8 ); httpPost . setEntity ( requestEntity ); CloseableHttpResponse response = closeableHttpClient . execute ( httpPost ); HttpEntity entity = response . getEntity (); // InputStream content = entity.getContent(); // String result = IOUtils.toString(content); //Document dc = strXmlToDocument(result); if ( entity != null ) { // \u6253\u5370\u54cd\u5e94\u5185\u5bb9 retStr = EntityUtils . toString ( entity , \"UTF-8\" ); System . out . println ( \"response:\" + retStr ); } // \u91ca\u653e\u8d44\u6e90 closeableHttpClient . close (); } catch ( Exception e ) { e . printStackTrace (); } return retStr ; } public static Document strXmlToDocument ( String parseStrXml ){ Document document = null ; try { document = DocumentHelper . parseText ( parseStrXml ); Element root = document . getRootElement (); List < Element > list = root . elements (); getElement ( list ); } catch ( DocumentException e ) { e . printStackTrace (); } return document ; } // \u9012\u5f52\u8bfb\u53d6\u5b50\u5143\u7d20 private static void getElement ( List < Element > sonElemetList ) { // Map<String,String> map = new HashMap<String, String>(); for ( Element sonElement : sonElemetList ) { if ( sonElement . elements (). size () != 0 ) { System . out . println ( sonElement . getName () + \":\" ); getElement ( sonElement . elements ()); } else { System . out . println ( sonElement . getName () + \":\" + sonElement . getText ()); } } } }","title":"4.1 HTTP Request"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#42-generate-local-client-code","text":"\u6709\u5f88\u591a\u6846\u67b6\u53ef\u4ee5\u5b9e\u73b0\u3002\u5e38\u89c1\u7684\u6709Apache CXF\uff0cApache Axis2\uff0cSpring-WS \u6b64\u5904\u4f7f\u7528\u7684\u662fSpring-WS Consuming a SOAP web service","title":"4.2 Generate Local Client Code"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#421-add-dependencies","text":"<dependency> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-web-services </artifactId> <exclusions> <exclusion> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-starter-tomcat </artifactId> </exclusion> </exclusions> </dependency> <build> <plugins> <plugin> <groupId> org.springframework.boot </groupId> <artifactId> spring-boot-maven-plugin </artifactId> </plugin> <!-- tag::wsdl[] --> <plugin> <groupId> org.jvnet.jaxb2.maven2 </groupId> <artifactId> maven-jaxb2-plugin </artifactId> <version> 0.14.0 </version> <executions> <execution> <goals> <goal> generate </goal> </goals> </execution> </executions> <configuration> <schemaLanguage> WSDL </schemaLanguage> <generatePackage> com.example.consumingwebservice.wsdl </generatePackage> <schemas> <schema> <url> http://localhost:8080/ws/countries.wsdl </url> </schema> </schemas> </configuration> </plugin> <!-- end::wsdl[] --> </plugins> </build>","title":"4.2.1 Add dependencies"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#422-generate-domain-objects-based-on-a-wsdl","text":"Use maven-jaxb2-plugin generate code. The generated code is at target/generated-sources","title":"4.2.2 Generate Domain Objects Based on a WSDL"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#423-create-a-client","text":"package com.example.consumingwebservice ; import org.slf4j.Logger ; import org.slf4j.LoggerFactory ; import org.springframework.ws.client.core.support.WebServiceGatewaySupport ; import org.springframework.ws.soap.client.core.SoapActionCallback ; import com.example.consumingwebservice.wsdl.GetCountryRequest ; import com.example.consumingwebservice.wsdl.GetCountryResponse ; public class CountryClient extends WebServiceGatewaySupport { private static final Logger log = LoggerFactory . getLogger ( CountryClient . class ); public GetCountryResponse getCountry ( String country ) { GetCountryRequest request = new GetCountryRequest (); request . setName ( country ); log . info ( \"Requesting location for \" + country ); GetCountryResponse response = ( GetCountryResponse ) getWebServiceTemplate () . marshalSendAndReceive ( \"http://localhost:8080/ws/countries\" , request , new SoapActionCallback ( \"http://spring.io/guides/gs-producing-web-service/GetCountryRequest\" )); return response ; } }","title":"4.2.3 Create a Client"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#424-configuring-web-service-components","text":"package com.example.consumingwebservice ; import org.springframework.context.annotation.Bean ; import org.springframework.context.annotation.Configuration ; import org.springframework.oxm.jaxb.Jaxb2Marshaller ; @Configuration public class CountryConfiguration { @Bean public Jaxb2Marshaller marshaller () { Jaxb2Marshaller marshaller = new Jaxb2Marshaller (); // this package must match the package in the <generatePackage> specified in // pom.xml marshaller . setContextPath ( \"com.example.consumingwebservice.wsdl\" ); return marshaller ; } @Bean public CountryClient countryClient ( Jaxb2Marshaller marshaller ) { CountryClient client = new CountryClient (); client . setDefaultUri ( \"http://localhost:8080/ws\" ); client . setMarshaller ( marshaller ); client . setUnmarshaller ( marshaller ); return client ; } }","title":"4.2.4 Configuring Web Service Components"},{"location":"dev/Introduction%20to%20SOAP%20and%20Web%20Service/#425-use-client-to-call-method-you-need","text":"new Client\u7684\u5b9e\u4f8b\uff0c\u548c\u8c03\u7528\u672c\u5730\u4ee3\u7801\u4e00\u6837\uff0c\u8c03\u7528WSDL\u4e2d\u53d1\u5e03\u7684\u65b9\u6cd5\u3002 \u53ef\u4ee5\u5bf9Request\u548cResponse\u505a\u4e00\u4e9b\u5c01\u88c5","title":"4.2.5 Use Client To Call Method you need"},{"location":"dev/Webkit%2CBlink%2C%20V8%2C%20Chromium/","text":"Webkit, Blink, V8, Chromium \u00b6 1. WebKit \u00b6 When Apple decided to make its own web browser back in 2001, it chose KHTML/KJS from the KDE project as the basis of its rendering engine . Apple didn't merely \"adopt\" this technology; it took the source code and ran with it, hiring a bunch of smart, experienced developers and giving them the time and resources they needed to massively improve KHTML/KJS over the course of several years. Thus, WebKit was born. Apple\u57fa\u4e8eKDE\u7684 KHTML/KJS\u5f00\u53d1\u51fa\u4e86Webkit . KHTML is a browser engine\uff0cKJS is KDE\\'s ECMAScript-JavaScript engine. which lately respectively evolve to WebCore and JavaScriptCore. 2. Blink \u00b6 When Google introduced its own web browser in 2008 , it chose WebKit as the basis for its rendering engine. Rather than forking off its own engine based on WebKit, Google chose to participate in the existing WebKit community. Google\u5728WebKit\u793e\u533a\u5f71\u54cd\u65e5\u76db \uff0cApple\u6bd4\u8f83\u4fdd\u5b88\uff0c\u6240\u4ee5fork\u51fa\u4e86Blink. Given these graphs, and knowing the history between Apple and Google over the past decade, one of two things seemed inevitable: either Google was going to become the new de facto \"owner\" of WebKit development, or it was going to create its own fork of WebKit. It turned out to be the latter. Thus, Blink was born . Google has already proven that it has the talent, experience, and resources to develop a world-class web browser. It made its own JavaScript engine, its own multi-process architecture for stability and code isolation , and has added a huge number of improvements to WebKit itself. Now it\\'s taken the reins of the rendering engine too. On April 3, 2013, Google announced that it had forked WebCore, a component of WebKit, to be used in future versions of Google Chrome and the Opera web browser, under the name Blink. 3. WebKit2 \u00b6 WebKit2 is created to support multi-process architecture. Google did not want to contribute its multi-process architecture back to the WebKit project, so Apple created its own solution: the somewhat confusingly named WebKit2 . While Google chose to put the process management into the browser application, Apple baked multi-process support into the WebKit engine itself. This means that any application that uses WebKit2 gets the benefits of multi-process isolation without having to do anything special. 4. Chromium \u00b6 V8 \u662f Blink \u5185\u7f6e\u7684 JavaScript \u5f15\u64ce\u3002Chromium \u662f Google \u516c\u53f8\u4e00\u4e2a\u5f00\u6e90\u6d4f\u89c8\u5668\u9879\u76ee\uff0c\u4f7f\u7528 Blink \u6e32\u67d3\u5f15\u64ce\u9a71\u52a8\u3002Chromium \u548c Google Chrome \u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1aChromium + \u96c6\u6210 Google \u4ea7\u54c1 = Google Chrome\u3002 \u53ef\u4ee5\u7406\u89e3\u4e3a Google Chrome \u662f\u4e2a\u5546\u4e1a\u9879\u76ee\uff0c\u800c Chromium \u662f\u4e00\u4e2a\u4e2d\u7acb\u3001\u65e0\u7acb\u573a\u7684\uff08\u7406\u8bba\u4e0a\uff09\u7684\u5f00\u6e90\u9879\u76ee Chromium\u662fGoogle\u4e3a\u53d1\u5c55\u6d4f\u89c8\u5668Google Chrome\u800c\u53d1\u5e03\u7684\u514d\u8d39\u5f00\u6e90\u8f6f\u4ef6\u9879\u76ee\uff0c\u4ee5BSD\u8bb8\u53ef\u534f\u8bae\u7b49\u6570\u79cd\u8bb8\u53ef\u53d1\u884c\u5e76\u5f00\u653e\u6e90\u4ee3\u7801\u3002 Chromium\u4e0eGoogle Chrome\u5171\u4eab\u5927\u90e8\u5206\u4ee3\u7801\u548c\u529f\u80fd \uff0c\u4f46\u529f\u80fd\u548c\u5546\u6807\u4e4b\u95f4\u6709\u4e00\u4e9b\u7ec6\u5fae\u5dee\u522b\u3002 Chromium\u7684\u66f4\u65b0\u901f\u5ea6\u5f88\u5feb\uff0c\u6bcf\u9694\u6570\u5c0f\u65f6\u5373\u6709\u65b0\u7684\u5f00\u53d1\u7248\u672c\u53d1\u5e03\u3002[8]\u7531\u4e8e\u65b0\u529f\u80fd\u4f1a\u5148\u5728Chromium\u4e0a\u6d4b\u8bd5\uff0c\u7b49\u5f85\u8ba4\u8bc1\u540e\u624d\u4f1a\u5e94\u7528\u5728Google Chrome\u4e0a\uff0c\u6240\u4ee5Chromium\u76f8\u5f53\u4e8eGoogle Chrome\u7684\u5148\u884c\u7248\u3002 \u8bb8\u591a\u5176\u4ed6\u6d4f\u89c8\u5668\u4e5f\u57fa\u4e8eChromium\u7684\u4ee3\u7801\uff0c\u4f8b\u5982Microsoft Edge\u548cOpera\u3002 5. JavaScript Engine \u00b6 \u628aJavaScript\u4ee3\u7801\u7f16\u8bd1\u6210\u672c\u5730\u673a\u5668\u7801 Node.js \u8fd0\u884c\u65f6\u7cfb\u7edf\u4e5f\u662f\u7531 V8 \u5f15\u64ce\u9a71\u52a8\u7684\u3002\u8fd9\u4f7f\u5f97 Node.js \u53ef\u4ee5\u4e0d\u65ad\u53d7\u76ca\u4e8e V8 \u7684\u5f00\u53d1\u548c\u6539\u8fdb\uff0c\u5e76\u63d0\u4f9b\u51fa\u8272\u800c\u5feb\u901f\u7684\u670d\u52a1\u5668\u4f53\u9a8c\u3002\u7531\u4e8e V8 \u662f\u7528 C++ \u7f16\u5199\u7684\uff0c\u56e0\u6b64\u80fd\u591f**\u5c06 JavaScript \u7f16\u8bd1\u4e3a\u672c\u5730\u673a\u5668\u4ee3\u7801**\uff0c\u800c\u4e0d\u662f\u5b9e\u65f6\u89e3\u91ca\u5b83\uff0c\u8fd9\u4f7f\u7684 Node.js \u5728\u670d\u52a1\u5668\u5e02\u573a\u4e2d\u5982\u6b64\u5feb\u901f\u7684\u5360\u636e\u4e00\u5b9a\u7684\u7ade\u4e89\u529b\u3002 V8 \u5bf9 DOM\uff08\u6587\u6863\u5bf9\u8c61\u6a21\u578b\uff09\u4e00\u65e0\u6240\u77e5\uff0c\u56e0\u4e3a\u5b83\u4ec5\u7528\u4e8e\u5904\u7406 JavaScript\u3002Blink \u5185\u7f6e\u7684\u5e03\u5c40\u5f15\u64ce\u8d1f\u8d23\u5904\u7406\u7f51\u9875\u5e03\u5c40\u548c\u5c55\u793a\u3002\u56e0\u4e3a Node.js \u4e0d\u9700\u8981\u4f7f\u7528 DOM\uff0c\u6240\u4ee5 Node.js \u53ea\u4f7f\u7528\u4e86 V8 \u5f15\u64ce \uff0c\u800c\u6ca1\u6709\u628a\u6574\u4e2a Blink \u5f15\u64ce\u90fd\u642c\u8fc7\u6765\u7528\u3002 V8------\u5f00\u6e90\uff0c\u7531 Google \u5f00\u53d1\uff0c\u4f7f\u7528 C++ \u7f16\u5199 SpiderMonkey------\u7b2c\u4e00\u4e2a JavaScript \u5f15\u64ce\uff0c\u8be5\u5f15\u64ce\u8fc7\u53bb\u9a71\u52a8 Netscape Navigator\uff0c\u5982\u4eca\u9a71\u52a8 Firefox \u6d4f\u89c8\u5668\u3002 JavaScriptCore------\u5f00\u6e90\uff0c\u82f9\u679c\u516c\u53f8\u4e3a Safair \u6d4f\u89c8\u5668\u5f00\u53d1\u7684","title":"Browser Engine"},{"location":"dev/Webkit%2CBlink%2C%20V8%2C%20Chromium/#webkit-blink-v8-chromium","text":"","title":"Webkit, Blink, V8, Chromium"},{"location":"dev/Webkit%2CBlink%2C%20V8%2C%20Chromium/#1-webkit","text":"When Apple decided to make its own web browser back in 2001, it chose KHTML/KJS from the KDE project as the basis of its rendering engine . Apple didn't merely \"adopt\" this technology; it took the source code and ran with it, hiring a bunch of smart, experienced developers and giving them the time and resources they needed to massively improve KHTML/KJS over the course of several years. Thus, WebKit was born. Apple\u57fa\u4e8eKDE\u7684 KHTML/KJS\u5f00\u53d1\u51fa\u4e86Webkit . KHTML is a browser engine\uff0cKJS is KDE\\'s ECMAScript-JavaScript engine. which lately respectively evolve to WebCore and JavaScriptCore.","title":"1. WebKit"},{"location":"dev/Webkit%2CBlink%2C%20V8%2C%20Chromium/#2-blink","text":"When Google introduced its own web browser in 2008 , it chose WebKit as the basis for its rendering engine. Rather than forking off its own engine based on WebKit, Google chose to participate in the existing WebKit community. Google\u5728WebKit\u793e\u533a\u5f71\u54cd\u65e5\u76db \uff0cApple\u6bd4\u8f83\u4fdd\u5b88\uff0c\u6240\u4ee5fork\u51fa\u4e86Blink. Given these graphs, and knowing the history between Apple and Google over the past decade, one of two things seemed inevitable: either Google was going to become the new de facto \"owner\" of WebKit development, or it was going to create its own fork of WebKit. It turned out to be the latter. Thus, Blink was born . Google has already proven that it has the talent, experience, and resources to develop a world-class web browser. It made its own JavaScript engine, its own multi-process architecture for stability and code isolation , and has added a huge number of improvements to WebKit itself. Now it\\'s taken the reins of the rendering engine too. On April 3, 2013, Google announced that it had forked WebCore, a component of WebKit, to be used in future versions of Google Chrome and the Opera web browser, under the name Blink.","title":"2. Blink"},{"location":"dev/Webkit%2CBlink%2C%20V8%2C%20Chromium/#3-webkit2","text":"WebKit2 is created to support multi-process architecture. Google did not want to contribute its multi-process architecture back to the WebKit project, so Apple created its own solution: the somewhat confusingly named WebKit2 . While Google chose to put the process management into the browser application, Apple baked multi-process support into the WebKit engine itself. This means that any application that uses WebKit2 gets the benefits of multi-process isolation without having to do anything special.","title":"3. WebKit2"},{"location":"dev/Webkit%2CBlink%2C%20V8%2C%20Chromium/#4-chromium","text":"V8 \u662f Blink \u5185\u7f6e\u7684 JavaScript \u5f15\u64ce\u3002Chromium \u662f Google \u516c\u53f8\u4e00\u4e2a\u5f00\u6e90\u6d4f\u89c8\u5668\u9879\u76ee\uff0c\u4f7f\u7528 Blink \u6e32\u67d3\u5f15\u64ce\u9a71\u52a8\u3002Chromium \u548c Google Chrome \u7684\u5173\u7cfb\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\uff1aChromium + \u96c6\u6210 Google \u4ea7\u54c1 = Google Chrome\u3002 \u53ef\u4ee5\u7406\u89e3\u4e3a Google Chrome \u662f\u4e2a\u5546\u4e1a\u9879\u76ee\uff0c\u800c Chromium \u662f\u4e00\u4e2a\u4e2d\u7acb\u3001\u65e0\u7acb\u573a\u7684\uff08\u7406\u8bba\u4e0a\uff09\u7684\u5f00\u6e90\u9879\u76ee Chromium\u662fGoogle\u4e3a\u53d1\u5c55\u6d4f\u89c8\u5668Google Chrome\u800c\u53d1\u5e03\u7684\u514d\u8d39\u5f00\u6e90\u8f6f\u4ef6\u9879\u76ee\uff0c\u4ee5BSD\u8bb8\u53ef\u534f\u8bae\u7b49\u6570\u79cd\u8bb8\u53ef\u53d1\u884c\u5e76\u5f00\u653e\u6e90\u4ee3\u7801\u3002 Chromium\u4e0eGoogle Chrome\u5171\u4eab\u5927\u90e8\u5206\u4ee3\u7801\u548c\u529f\u80fd \uff0c\u4f46\u529f\u80fd\u548c\u5546\u6807\u4e4b\u95f4\u6709\u4e00\u4e9b\u7ec6\u5fae\u5dee\u522b\u3002 Chromium\u7684\u66f4\u65b0\u901f\u5ea6\u5f88\u5feb\uff0c\u6bcf\u9694\u6570\u5c0f\u65f6\u5373\u6709\u65b0\u7684\u5f00\u53d1\u7248\u672c\u53d1\u5e03\u3002[8]\u7531\u4e8e\u65b0\u529f\u80fd\u4f1a\u5148\u5728Chromium\u4e0a\u6d4b\u8bd5\uff0c\u7b49\u5f85\u8ba4\u8bc1\u540e\u624d\u4f1a\u5e94\u7528\u5728Google Chrome\u4e0a\uff0c\u6240\u4ee5Chromium\u76f8\u5f53\u4e8eGoogle Chrome\u7684\u5148\u884c\u7248\u3002 \u8bb8\u591a\u5176\u4ed6\u6d4f\u89c8\u5668\u4e5f\u57fa\u4e8eChromium\u7684\u4ee3\u7801\uff0c\u4f8b\u5982Microsoft Edge\u548cOpera\u3002","title":"4. Chromium"},{"location":"dev/Webkit%2CBlink%2C%20V8%2C%20Chromium/#5-javascript-engine","text":"\u628aJavaScript\u4ee3\u7801\u7f16\u8bd1\u6210\u672c\u5730\u673a\u5668\u7801 Node.js \u8fd0\u884c\u65f6\u7cfb\u7edf\u4e5f\u662f\u7531 V8 \u5f15\u64ce\u9a71\u52a8\u7684\u3002\u8fd9\u4f7f\u5f97 Node.js \u53ef\u4ee5\u4e0d\u65ad\u53d7\u76ca\u4e8e V8 \u7684\u5f00\u53d1\u548c\u6539\u8fdb\uff0c\u5e76\u63d0\u4f9b\u51fa\u8272\u800c\u5feb\u901f\u7684\u670d\u52a1\u5668\u4f53\u9a8c\u3002\u7531\u4e8e V8 \u662f\u7528 C++ \u7f16\u5199\u7684\uff0c\u56e0\u6b64\u80fd\u591f**\u5c06 JavaScript \u7f16\u8bd1\u4e3a\u672c\u5730\u673a\u5668\u4ee3\u7801**\uff0c\u800c\u4e0d\u662f\u5b9e\u65f6\u89e3\u91ca\u5b83\uff0c\u8fd9\u4f7f\u7684 Node.js \u5728\u670d\u52a1\u5668\u5e02\u573a\u4e2d\u5982\u6b64\u5feb\u901f\u7684\u5360\u636e\u4e00\u5b9a\u7684\u7ade\u4e89\u529b\u3002 V8 \u5bf9 DOM\uff08\u6587\u6863\u5bf9\u8c61\u6a21\u578b\uff09\u4e00\u65e0\u6240\u77e5\uff0c\u56e0\u4e3a\u5b83\u4ec5\u7528\u4e8e\u5904\u7406 JavaScript\u3002Blink \u5185\u7f6e\u7684\u5e03\u5c40\u5f15\u64ce\u8d1f\u8d23\u5904\u7406\u7f51\u9875\u5e03\u5c40\u548c\u5c55\u793a\u3002\u56e0\u4e3a Node.js \u4e0d\u9700\u8981\u4f7f\u7528 DOM\uff0c\u6240\u4ee5 Node.js \u53ea\u4f7f\u7528\u4e86 V8 \u5f15\u64ce \uff0c\u800c\u6ca1\u6709\u628a\u6574\u4e2a Blink \u5f15\u64ce\u90fd\u642c\u8fc7\u6765\u7528\u3002 V8------\u5f00\u6e90\uff0c\u7531 Google \u5f00\u53d1\uff0c\u4f7f\u7528 C++ \u7f16\u5199 SpiderMonkey------\u7b2c\u4e00\u4e2a JavaScript \u5f15\u64ce\uff0c\u8be5\u5f15\u64ce\u8fc7\u53bb\u9a71\u52a8 Netscape Navigator\uff0c\u5982\u4eca\u9a71\u52a8 Firefox \u6d4f\u89c8\u5668\u3002 JavaScriptCore------\u5f00\u6e90\uff0c\u82f9\u679c\u516c\u53f8\u4e3a Safair \u6d4f\u89c8\u5668\u5f00\u53d1\u7684","title":"5. JavaScript Engine"},{"location":"java/object/","text":"Class Object \u00b6 1. Object\u7c7b \u00b6 Object \u7c7b\u4f4d\u4e8e java.lang \u5305\u4e2d\uff0c\u7f16\u8bd1\u65f6\u4f1a\u81ea\u52a8\u5bfc\u5165\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7c7b\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u660e\u786e\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u81ea\u52a8\u7ee7\u627f Object\uff0c\u6210\u4e3a Object \u7684\u5b50\u7c7b\u3002 Object \u7c7b\u53ef\u4ee5\u663e\u793a\u7ee7\u627f\uff0c\u4e5f\u53ef\u4ee5\u9690\u5f0f\u7ee7\u627f\uff0c\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u65f6\u4e00\u6837\u7684\uff1a public class Runoob extends Object { } public class Runoob { } \u5e8f\u53f7 \u65b9\u6cd5 1 protected Object clone() \u521b\u5efa\u5e76\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684\u62f7\u8d1d 2 boolean equals(Object obj) \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 3 protected void finalize() \u5f53 GC (\u5783\u573e\u56de\u6536\u5668)\u786e\u5b9a\u4e0d\u5b58\u5728\u5bf9\u8be5\u5bf9\u8c61\u7684\u6709\u66f4\u591a\u5f15\u7528\u65f6\uff0c\u7531\u5bf9\u8c61\u7684\u5783\u573e\u56de\u6536\u5668\u8c03\u7528\u6b64\u65b9\u6cd5\u3002 protected void finalize() throws Throwable { } \u7a7a\u65b9\u6cd5 4 Class getClass() \u83b7\u53d6\u5bf9\u8c61\u7684\u8fd0\u884c\u65f6\u5bf9\u8c61\u7684\u7c7b 5 int hashCode() \u83b7\u53d6\u5bf9\u8c61\u7684 hash \u503c 6 void notify() \u5524\u9192\u5728\u8be5\u5bf9\u8c61\u4e0a\u7b49\u5f85\u7684\u67d0\u4e2a\u7ebf\u7a0b 7 void notifyAll() \u5524\u9192\u5728\u8be5\u5bf9\u8c61\u4e0a\u7b49\u5f85\u7684\u6240\u6709\u7ebf\u7a0b 8 String toString() \u8fd4\u56de\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f 9 void wait() \u8ba9\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528\u6b64\u5bf9\u8c61\u7684 notify() \u65b9\u6cd5\u6216 notifyAll() \u65b9\u6cd5\u3002 10 void wait(long timeout) \u8ba9\u5f53\u524d\u7ebf\u7a0b\u5904\u4e8e\u7b49\u5f85(\u963b\u585e)\u72b6\u6001\uff0c\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528\u6b64\u5bf9\u8c61\u7684 notify() \u65b9\u6cd5\u6216 notifyAll() \u65b9\u6cd5\uff0c\u6216\u8005\u8d85\u8fc7\u53c2\u6570\u8bbe\u7f6e\u7684timeout\u8d85\u65f6\u65f6\u95f4\u3002 11 void wait(long timeout, int nanos) \u4e0e wait(long timeout) \u65b9\u6cd5\u7c7b\u4f3c\uff0c\u591a\u4e86\u4e00\u4e2a nanos \u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u8868\u793a\u989d\u5916\u65f6\u95f4\uff08\u4ee5\u7eb3\u79d2\u4e3a\u5355\u4f4d\uff0c\u8303\u56f4\u662f 0-999999\uff09\u3002 \u6240\u4ee5\u8d85\u65f6\u7684\u65f6\u95f4\u8fd8\u9700\u8981\u52a0\u4e0a nanos \u7eb3\u79d2\u3002 wait\uff0cnotify\uff0chashCode\uff0cnotifyAll\uff0cclone\uff0cgetClass\u90fd\u662f\u672c\u5730\u65b9\u6cd5 2. equals() \u00b6 equals() \u5b9a\u4e49\u5728JDK\u7684Object.java\u4e2d\u3002\u901a\u8fc7\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\u662f\u5426\u76f8\u7b49(\u5373\uff0c\u662f\u5426\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61)\u6765\u533a\u5206\u5b83\u4eec\u662f\u5426\u76f8\u7b49\u3002\u6e90\u7801\u5982\u4e0b\uff1a public boolean equals ( Object obj ) { return ( this == obj ); ' //\u6bd4\u8f83\u5185\u5b58\u5730\u5740 } \u6ca1\u6709\u91cd\u5199\u6bd4\u8f83\u7684\u662f\u5185\u5b58\u5730\u5740\uff0c\u662f\u4e0d\u662f\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5b58\u5bf9\u8c61\u3002 \u91cd\u5199\u4e00\u822c\u662f\u6bd4\u8f83\u5185\u5bb9\u662f\u5426\u76f8\u540c\u3002 @Override public boolean equals ( Object o ) { if ( this == o ) return true ; if ( o == null || getClass () != o . getClass ()) return false ; Person person = ( Person ) o ; return Objects . equals ( name , person . name ) && Objects . equals ( age , person . age ); } // Object.equals(a,b) \u6bd4\u8f83\u5730\u5740\uff0c\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u5bf9\u8c61 public static boolean equals ( Object a , Object b ) { return ( a == b ) || ( a != null && a . equals ( b )); } == \uff1a\u5bf9\u8c61\u6bd4\u8f83\u5730\u5740\uff0c\u57fa\u672c\u7c7b\u578b\u6bd4\u8f83\u503c equals: \u6ca1\u6709\u91cd\u5199\u5c31\u662f==\uff0c\u91cd\u5199\u4e86\u6bd4\u8f83\u5185\u5bb9 3. hashCode() \u00b6 \u91cd\u5199hashCode() @Override public int hashCode () { return Objects . hash ( name , age ); } // package java.util.Objects public static int hashCode ( Object o ) { return o != null ? o . hashCode () : 0 ; } public static int hash ( Object ... values ) { return Arrays . hashCode ( values ); } // package java.util.Arrays public static int hashCode ( Object a [] ) { if ( a == null ) return 0 ; int result = 1 ; for ( Object element : a ) result = 31 * result + ( element == null ? 0 : element . hashCode ()); return result ; } // java.lang.String\u91cd\u5199\u4e86HashCode public int hashCode () { int h = hash ; if ( h == 0 && value . length > 0 ) { char val [] = value ; for ( int i = 0 ; i < value . length ; i ++ ) { h = 31 * h + val [ i ] ; } hash = h ; } return h ; } // package java.lang.Object \u672c\u5730\u65b9\u6cd5\u5b9e\u73b0 public native int hashCode (); public static void main ( String [] args ) { Person tom = new Person ( \"TOM\" , \"12\" ); System . out . println ( tom . hashCode ()); System . out . println ( \"TOM\" . hashCode ()); System . out . println ( new Integer ( 12 ). hashCode ()); } /* 2583280 83250 12 */ HashCode\u7684\u4f5c\u7528 \u867d\u7136\uff0c\u6bcf\u4e2aJava\u7c7b\u90fd\u5305\u542bhashCode() \u51fd\u6570\u3002\u4f46\u662f\uff0c\u4ec5\u4ec5\u5f53\u521b\u5efa\u5e76\u67d0\u4e2a\u201c\u7c7b\u7684\u6563\u5217\u8868\u201d\uff08\u5982HashMap\uff0cHashtable\uff0cHashSet\uff09\u65f6\uff0c\u8be5\u7c7b\u7684hashCode() \u624d\u6709\u7528(\u4f5c\u7528\u662f\uff1a\u786e\u5b9a\u8be5\u7c7b\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5728\u6563\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\uff1b\u5176\u5b83\u60c5\u51b5\u4e0b(\u4f8b\u5982\uff0c\u521b\u5efa\u7c7b\u7684\u5355\u4e2a\u5bf9\u8c61\uff0c\u6216\u8005\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u6570\u7ec4\u7b49\u7b49)\uff0c\u7c7b\u7684hashCode() \u6ca1\u6709\u4f5c\u7528\u3002 \u4e5f\u5c31\u662f\u8bf4\uff1ahashCode() \u5728\u6563\u5217\u8868\u4e2d\u624d\u6709\u7528\uff0c\u5728\u5176\u5b83\u60c5\u51b5\u4e0b\u6ca1\u7528\u3002\u5728\u6563\u5217\u8868\u4e2dhashCode() \u7684\u4f5c\u7528\u662f\u83b7\u53d6\u5bf9\u8c61\u7684\u6563\u5217\u7801\uff0c\u8fdb\u800c\u786e\u5b9a\u8be5\u5bf9\u8c61\u5728\u6563\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u3002 \u5728\u4f7f\u7528HashMap\u7b49\u7ed3\u6784\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0Hash Collision\uff0c\u6b64\u65f6\u624d\u9700\u8981equals()\uff0c\u5e73\u65f6\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u3002 HashCode\u4e0d\u540c\u7684\u5bf9\u8c61\u4e00\u5b9a\u4e0d\u76f8\u7b49 \u76f8\u540c\u7684\u5bf9\u8c61HashCode\u4e00\u5b9a\u76f8\u7b49 HashCode\u76f8\u7b49\uff0c\u4e5f\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u5bf9\u8c61 4. toString() \u00b6 // java.lang.Object() public String toString () { return getClass (). getName () + \"@\" + Integer . toHexString ( hashCode ()); // java.lang.Object - \u7c7b\u540d // @ - \u7b26\u53f7 // d716361 - \u54c8\u5e0c\u503c\u7684\u5341\u516d\u8fdb\u5236\u503c } class RunoobTest { public static void main ( String [] args ) { // toString() with Object Object obj1 = new Object (); System . out . println ( obj1 . toString ()); Object obj2 = new Object (); System . out . println ( obj2 . toString ()); Object obj3 = new Object (); System . out . println ( obj3 . toString ()); } } /* java.lang.Object@d716361 java.lang.Object@6ff3c5b5 java.lang.Object@3764951d */ // \u91cd\u5199toString() @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age='\" + age + '\\'' + '}' ; } // Person{name='TOM', age='12'} 5. Lombok \u00b6 \u5e38\u7528\u7684\u51e0\u4e2a\u6ce8\u89e3 \uff1a @Data \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u7c7b\u7684get\u3001set\u3001equals\u3001hashCode\u3001canEqual\u3001toString\u65b9\u6cd5 @AllArgsConstructor \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u7c7b\u7684\u5168\u53c2\u6784\u9020 @NoArgsConstructor \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u7c7b\u7684\u65e0\u53c2\u6784\u9020 Java\u7684\u6784\u9020\u51fd\u6570\u4e0e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 @Setter \uff1a \u6ce8\u5728\u5c5e\u6027\u4e0a\uff0c\u63d0\u4f9b set \u65b9\u6cd5 @Getter \uff1a \u6ce8\u5728\u5c5e\u6027\u4e0a\uff0c\u63d0\u4f9b get \u65b9\u6cd5 @EqualsAndHashCode \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u5bf9\u5e94\u7684 equals \u548c hashCode \u65b9\u6cd5 @Log4j/@Slf4j \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u5bf9\u5e94\u7684 Logger \u5bf9\u8c61\uff0c\u53d8\u91cf\u540d\u4e3a log @Data is a convenient shortcut annotation that bundles the features of @ToString , @EqualsAndHashCode , @Getter / @Setter and @RequiredArgsConstructor together: In other words, @Data generates all the boilerplate that is normally associated with simple POJOs (Plain Old Java Objects) and beans: getters for all fields, setters for all non-final fields, and appropriate toString , equals and hashCode implementations that involve the fields of the class, and a constructor that initializes all final fields, as well as all non-final fields with no initializer that have been marked with @NonNull , in order to ensure the field is never null. @RequiredArgsConstructor @RequiredArgsConstructor \u4e5f\u662f\u5728\u7c7b\u4e0a\u4f7f\u7528\uff0c\u4f46\u662f\u8fd9\u4e2a\u6ce8\u89e3\u53ef\u4ee5\u751f\u6210\u5e26\u53c2\u6216\u8005\u4e0d\u5e26\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u82e5\u5e26\u53c2\u6570\uff0c\u53ea\u80fd\u662f\u7c7b\u4e2d\u6240\u6709\u5e26\u6709 @NonNull \u6ce8\u89e3\u7684\u548c\u4ee5 final \u4fee\u9970\u7684\u672a\u7ecf\u521d\u59cb\u5316\u7684\u5b57\u6bb5 @RequiredArgsConstructor public class User { private final String gender ; @NonNull private String username ; private String password ; } // \u7f16\u8bd1\u540e\uff1a public class User { private final String gender ; @NonNull private String username ; private String password ; public User ( String gender , @NonNull String username ) { if ( username == null ) { throw new NullPointerException ( \"username is marked @NonNull but is null\" ); } else { this . gender = gender ; this . username = username ; } } }","title":"Class Object"},{"location":"java/object/#class-object","text":"","title":"Class Object"},{"location":"java/object/#1-object","text":"Object \u7c7b\u4f4d\u4e8e java.lang \u5305\u4e2d\uff0c\u7f16\u8bd1\u65f6\u4f1a\u81ea\u52a8\u5bfc\u5165\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7c7b\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u660e\u786e\u7ee7\u627f\u4e00\u4e2a\u7236\u7c7b\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u81ea\u52a8\u7ee7\u627f Object\uff0c\u6210\u4e3a Object \u7684\u5b50\u7c7b\u3002 Object \u7c7b\u53ef\u4ee5\u663e\u793a\u7ee7\u627f\uff0c\u4e5f\u53ef\u4ee5\u9690\u5f0f\u7ee7\u627f\uff0c\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u65f6\u4e00\u6837\u7684\uff1a public class Runoob extends Object { } public class Runoob { } \u5e8f\u53f7 \u65b9\u6cd5 1 protected Object clone() \u521b\u5efa\u5e76\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u7684\u62f7\u8d1d 2 boolean equals(Object obj) \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 3 protected void finalize() \u5f53 GC (\u5783\u573e\u56de\u6536\u5668)\u786e\u5b9a\u4e0d\u5b58\u5728\u5bf9\u8be5\u5bf9\u8c61\u7684\u6709\u66f4\u591a\u5f15\u7528\u65f6\uff0c\u7531\u5bf9\u8c61\u7684\u5783\u573e\u56de\u6536\u5668\u8c03\u7528\u6b64\u65b9\u6cd5\u3002 protected void finalize() throws Throwable { } \u7a7a\u65b9\u6cd5 4 Class getClass() \u83b7\u53d6\u5bf9\u8c61\u7684\u8fd0\u884c\u65f6\u5bf9\u8c61\u7684\u7c7b 5 int hashCode() \u83b7\u53d6\u5bf9\u8c61\u7684 hash \u503c 6 void notify() \u5524\u9192\u5728\u8be5\u5bf9\u8c61\u4e0a\u7b49\u5f85\u7684\u67d0\u4e2a\u7ebf\u7a0b 7 void notifyAll() \u5524\u9192\u5728\u8be5\u5bf9\u8c61\u4e0a\u7b49\u5f85\u7684\u6240\u6709\u7ebf\u7a0b 8 String toString() \u8fd4\u56de\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f 9 void wait() \u8ba9\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528\u6b64\u5bf9\u8c61\u7684 notify() \u65b9\u6cd5\u6216 notifyAll() \u65b9\u6cd5\u3002 10 void wait(long timeout) \u8ba9\u5f53\u524d\u7ebf\u7a0b\u5904\u4e8e\u7b49\u5f85(\u963b\u585e)\u72b6\u6001\uff0c\u76f4\u5230\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528\u6b64\u5bf9\u8c61\u7684 notify() \u65b9\u6cd5\u6216 notifyAll() \u65b9\u6cd5\uff0c\u6216\u8005\u8d85\u8fc7\u53c2\u6570\u8bbe\u7f6e\u7684timeout\u8d85\u65f6\u65f6\u95f4\u3002 11 void wait(long timeout, int nanos) \u4e0e wait(long timeout) \u65b9\u6cd5\u7c7b\u4f3c\uff0c\u591a\u4e86\u4e00\u4e2a nanos \u53c2\u6570\uff0c\u8fd9\u4e2a\u53c2\u6570\u8868\u793a\u989d\u5916\u65f6\u95f4\uff08\u4ee5\u7eb3\u79d2\u4e3a\u5355\u4f4d\uff0c\u8303\u56f4\u662f 0-999999\uff09\u3002 \u6240\u4ee5\u8d85\u65f6\u7684\u65f6\u95f4\u8fd8\u9700\u8981\u52a0\u4e0a nanos \u7eb3\u79d2\u3002 wait\uff0cnotify\uff0chashCode\uff0cnotifyAll\uff0cclone\uff0cgetClass\u90fd\u662f\u672c\u5730\u65b9\u6cd5","title":"1. Object\u7c7b"},{"location":"java/object/#2-equals","text":"equals() \u5b9a\u4e49\u5728JDK\u7684Object.java\u4e2d\u3002\u901a\u8fc7\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u7684\u5730\u5740\u662f\u5426\u76f8\u7b49(\u5373\uff0c\u662f\u5426\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61)\u6765\u533a\u5206\u5b83\u4eec\u662f\u5426\u76f8\u7b49\u3002\u6e90\u7801\u5982\u4e0b\uff1a public boolean equals ( Object obj ) { return ( this == obj ); ' //\u6bd4\u8f83\u5185\u5b58\u5730\u5740 } \u6ca1\u6709\u91cd\u5199\u6bd4\u8f83\u7684\u662f\u5185\u5b58\u5730\u5740\uff0c\u662f\u4e0d\u662f\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5b58\u5bf9\u8c61\u3002 \u91cd\u5199\u4e00\u822c\u662f\u6bd4\u8f83\u5185\u5bb9\u662f\u5426\u76f8\u540c\u3002 @Override public boolean equals ( Object o ) { if ( this == o ) return true ; if ( o == null || getClass () != o . getClass ()) return false ; Person person = ( Person ) o ; return Objects . equals ( name , person . name ) && Objects . equals ( age , person . age ); } // Object.equals(a,b) \u6bd4\u8f83\u5730\u5740\uff0c\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u5bf9\u8c61 public static boolean equals ( Object a , Object b ) { return ( a == b ) || ( a != null && a . equals ( b )); } == \uff1a\u5bf9\u8c61\u6bd4\u8f83\u5730\u5740\uff0c\u57fa\u672c\u7c7b\u578b\u6bd4\u8f83\u503c equals: \u6ca1\u6709\u91cd\u5199\u5c31\u662f==\uff0c\u91cd\u5199\u4e86\u6bd4\u8f83\u5185\u5bb9","title":"2. equals()"},{"location":"java/object/#3-hashcode","text":"\u91cd\u5199hashCode() @Override public int hashCode () { return Objects . hash ( name , age ); } // package java.util.Objects public static int hashCode ( Object o ) { return o != null ? o . hashCode () : 0 ; } public static int hash ( Object ... values ) { return Arrays . hashCode ( values ); } // package java.util.Arrays public static int hashCode ( Object a [] ) { if ( a == null ) return 0 ; int result = 1 ; for ( Object element : a ) result = 31 * result + ( element == null ? 0 : element . hashCode ()); return result ; } // java.lang.String\u91cd\u5199\u4e86HashCode public int hashCode () { int h = hash ; if ( h == 0 && value . length > 0 ) { char val [] = value ; for ( int i = 0 ; i < value . length ; i ++ ) { h = 31 * h + val [ i ] ; } hash = h ; } return h ; } // package java.lang.Object \u672c\u5730\u65b9\u6cd5\u5b9e\u73b0 public native int hashCode (); public static void main ( String [] args ) { Person tom = new Person ( \"TOM\" , \"12\" ); System . out . println ( tom . hashCode ()); System . out . println ( \"TOM\" . hashCode ()); System . out . println ( new Integer ( 12 ). hashCode ()); } /* 2583280 83250 12 */ HashCode\u7684\u4f5c\u7528 \u867d\u7136\uff0c\u6bcf\u4e2aJava\u7c7b\u90fd\u5305\u542bhashCode() \u51fd\u6570\u3002\u4f46\u662f\uff0c\u4ec5\u4ec5\u5f53\u521b\u5efa\u5e76\u67d0\u4e2a\u201c\u7c7b\u7684\u6563\u5217\u8868\u201d\uff08\u5982HashMap\uff0cHashtable\uff0cHashSet\uff09\u65f6\uff0c\u8be5\u7c7b\u7684hashCode() \u624d\u6709\u7528(\u4f5c\u7528\u662f\uff1a\u786e\u5b9a\u8be5\u7c7b\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u5728\u6563\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\uff1b\u5176\u5b83\u60c5\u51b5\u4e0b(\u4f8b\u5982\uff0c\u521b\u5efa\u7c7b\u7684\u5355\u4e2a\u5bf9\u8c61\uff0c\u6216\u8005\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u6570\u7ec4\u7b49\u7b49)\uff0c\u7c7b\u7684hashCode() \u6ca1\u6709\u4f5c\u7528\u3002 \u4e5f\u5c31\u662f\u8bf4\uff1ahashCode() \u5728\u6563\u5217\u8868\u4e2d\u624d\u6709\u7528\uff0c\u5728\u5176\u5b83\u60c5\u51b5\u4e0b\u6ca1\u7528\u3002\u5728\u6563\u5217\u8868\u4e2dhashCode() \u7684\u4f5c\u7528\u662f\u83b7\u53d6\u5bf9\u8c61\u7684\u6563\u5217\u7801\uff0c\u8fdb\u800c\u786e\u5b9a\u8be5\u5bf9\u8c61\u5728\u6563\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u3002 \u5728\u4f7f\u7528HashMap\u7b49\u7ed3\u6784\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0Hash Collision\uff0c\u6b64\u65f6\u624d\u9700\u8981equals()\uff0c\u5e73\u65f6\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u6ca1\u6709\u4ec0\u4e48\u5173\u7cfb\u3002 HashCode\u4e0d\u540c\u7684\u5bf9\u8c61\u4e00\u5b9a\u4e0d\u76f8\u7b49 \u76f8\u540c\u7684\u5bf9\u8c61HashCode\u4e00\u5b9a\u76f8\u7b49 HashCode\u76f8\u7b49\uff0c\u4e5f\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u5bf9\u8c61","title":"3. hashCode()"},{"location":"java/object/#4-tostring","text":"// java.lang.Object() public String toString () { return getClass (). getName () + \"@\" + Integer . toHexString ( hashCode ()); // java.lang.Object - \u7c7b\u540d // @ - \u7b26\u53f7 // d716361 - \u54c8\u5e0c\u503c\u7684\u5341\u516d\u8fdb\u5236\u503c } class RunoobTest { public static void main ( String [] args ) { // toString() with Object Object obj1 = new Object (); System . out . println ( obj1 . toString ()); Object obj2 = new Object (); System . out . println ( obj2 . toString ()); Object obj3 = new Object (); System . out . println ( obj3 . toString ()); } } /* java.lang.Object@d716361 java.lang.Object@6ff3c5b5 java.lang.Object@3764951d */ // \u91cd\u5199toString() @Override public String toString () { return \"Person{\" + \"name='\" + name + '\\'' + \", age='\" + age + '\\'' + '}' ; } // Person{name='TOM', age='12'}","title":"4. toString()"},{"location":"java/object/#5-lombok","text":"\u5e38\u7528\u7684\u51e0\u4e2a\u6ce8\u89e3 \uff1a @Data \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u7c7b\u7684get\u3001set\u3001equals\u3001hashCode\u3001canEqual\u3001toString\u65b9\u6cd5 @AllArgsConstructor \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u7c7b\u7684\u5168\u53c2\u6784\u9020 @NoArgsConstructor \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u7c7b\u7684\u65e0\u53c2\u6784\u9020 Java\u7684\u6784\u9020\u51fd\u6570\u4e0e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 @Setter \uff1a \u6ce8\u5728\u5c5e\u6027\u4e0a\uff0c\u63d0\u4f9b set \u65b9\u6cd5 @Getter \uff1a \u6ce8\u5728\u5c5e\u6027\u4e0a\uff0c\u63d0\u4f9b get \u65b9\u6cd5 @EqualsAndHashCode \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u5bf9\u5e94\u7684 equals \u548c hashCode \u65b9\u6cd5 @Log4j/@Slf4j \uff1a \u6ce8\u5728\u7c7b\u4e0a\uff0c\u63d0\u4f9b\u5bf9\u5e94\u7684 Logger \u5bf9\u8c61\uff0c\u53d8\u91cf\u540d\u4e3a log @Data is a convenient shortcut annotation that bundles the features of @ToString , @EqualsAndHashCode , @Getter / @Setter and @RequiredArgsConstructor together: In other words, @Data generates all the boilerplate that is normally associated with simple POJOs (Plain Old Java Objects) and beans: getters for all fields, setters for all non-final fields, and appropriate toString , equals and hashCode implementations that involve the fields of the class, and a constructor that initializes all final fields, as well as all non-final fields with no initializer that have been marked with @NonNull , in order to ensure the field is never null. @RequiredArgsConstructor @RequiredArgsConstructor \u4e5f\u662f\u5728\u7c7b\u4e0a\u4f7f\u7528\uff0c\u4f46\u662f\u8fd9\u4e2a\u6ce8\u89e3\u53ef\u4ee5\u751f\u6210\u5e26\u53c2\u6216\u8005\u4e0d\u5e26\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u3002 \u82e5\u5e26\u53c2\u6570\uff0c\u53ea\u80fd\u662f\u7c7b\u4e2d\u6240\u6709\u5e26\u6709 @NonNull \u6ce8\u89e3\u7684\u548c\u4ee5 final \u4fee\u9970\u7684\u672a\u7ecf\u521d\u59cb\u5316\u7684\u5b57\u6bb5 @RequiredArgsConstructor public class User { private final String gender ; @NonNull private String username ; private String password ; } // \u7f16\u8bd1\u540e\uff1a public class User { private final String gender ; @NonNull private String username ; private String password ; public User ( String gender , @NonNull String username ) { if ( username == null ) { throw new NullPointerException ( \"username is marked @NonNull but is null\" ); } else { this . gender = gender ; this . username = username ; } } }","title":"5. Lombok"},{"location":"test/tutorial/","text":"","title":"Tutorial"},{"location":"test/usage/","text":"usage","title":"Usage"},{"location":"test/%E7%A7%9F%E6%88%BF%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/","text":"\u79df\u623f\u6ce8\u610f\u4e8b\u9879 \u00b6 \u623f\u5c4b\u60c5\u51b5\uff1a \u00b6 \u623f\u5c4b\u4e0a\u6b21\u7684\u6c34\u7535\u6c14\u4ee5\u53ca\u7269\u7ba1\u8fd8\u6709\u5149\u7ea4\u7535\u8bdd\u8d39\u7b49\u6709\u6ca1\u6709\u7ed3\u6e05\u3002\u6c34\u7535\u6c14\u7f51\u3001\u7269\u7ba1\u8d39\u7528\u7684\u652f\u4ed8\uff0c\u4ea4\u623f\u65f6\u7684\u6c34\u7535\u6c14\u8bfb\u6570\u3002 \u5bb6\u5177\u7535\u5668\u7684\u65b0\u65e7\u3001\u8fd0\u884c\u72b6\u51b5\uff08\u51fa\u73b0\u6545\u969c\u65f6\u7531\u8c01\u6765\u7ef4\u4fee\uff09 \u95e8\u7a97\uff0c\u9501 \u5bb6\u7535\uff1a\u51b0\u7bb1\u3001\u7535\u89c6\u3001\u6d17\u8863\u673a\u3001\u7a7a\u8c03 \u53a8\u623f\uff1a\u62bd\u6cb9\u70df\u673a\u3001\u71c3\u6c14\u7076\u3001\u5fae\u6ce2\u7089\u3001\u4e0b\u6c34\u9053 \u5bb6\u5177\uff1a\u6c99\u53d1\u3001\u684c\u6905\u3001\u5e8a\u94fa\u3001\u67dc\u5b50 \u536b\u751f\u95f4\uff1a\u6dcb\u6d74\u3001\u9a6c\u6876\u3001\u70ed\u6c34\u5668 \u5c0f\u533a\u60c5\u51b5\uff0c\u88c5\u4fee\u3001\u7ef4\u4fee\uff0c\u5468\u8fb9\u4e0d\u80fd\u592a\u5435 \u623f\u5c4b\u662f\u5426\u6f0f\u6c34\u3001\u4e0b\u6c34\u9053\u5835\u585e\u3001\u6237\u578b\u3001\u671d\u5411\u3001\u590f\u5929\u4f1a\u4e0d\u4f1a\u592a\u70ed\u3001\u51ac\u5929\u65e5\u7167\u3001\u6f6e\u6e7f\u3001\u536b\u751f\u72b6\u51b5\u3001\u868a\u5b50\u3001\u87d1\u8782\u3001\u7535\u8def\u80fd\u5426\u7528\u5927\u529f\u7387\u7535\u5668 \u79df\u623f\u5408\u540c \u00b6 \u623f\u4e1c\u8eab\u4efd\u8bc1\u548c\u623f\u4ea7\u8bc1\u662f\u5426\u5bf9\u7684\u4e0a\uff0c\u662f\u4e0d\u662f\u4e8c\u623f\u4e1c\uff0c\u8981\u539f\u4ef6\uff08\u7b7e\u7ea6\u7684\u65f6\u5019\uff09 \u7b7e\u5408\u540c\u7684\u65e5\u671f\u4ee5\u53ca\u623f\u79df\u5230\u671f\u65f6\u95f4\uff0c\u8fd8\u6709\u5c31\u662f\u4ea4\u79df\u65b9\u5f0f\u548c\u4ea4\u79df\u65e5\u671f\uff0c\u5982\u679c\u623f\u4e1c\u63d0\u524d\u7ec8\u6b62\u5408\u540c\u8be5\u5982\u4f55\u8d54\u507f\u7b49 \u5b9a\u91d1\uff0c\u62bc\u51e0\u4ed8\u51e0\uff1f\u79df\u671f\u7ed3\u675f\uff0c\u62bc\u91d1\u8fd4\u8fd8\u7684\u6761\u6b3e \u660e\u786e\u4f4d\u7f6e\u3001\u95f4\u6570\u3001\u9762\u79ef\u3001\u8d28\u91cf\u3001 \u79df\u8d41\u671f\u9650 \u3001\u79df\u91d1\u53ca\u652f\u4ed8\u671f\u9650\u4e0e\u65b9\u5f0f \u8981\u4ed4\u7ec6\u770b\u5408\u540c \u4e0d\u8981\u652f\u4ed8\u7ed9\u4e2d\u4ecb\u4e2a\u4eba\uff0c\u8bb0\u5f97\u8981\u6536\u636e\uff0c\u4e2d\u4ecb\u8d39\u662f\u4e00\u6b21\u6027\u7684\u5417? \u652f\u4ed8\u5b9a\u91d1\u7684\u60c5\u51b5\uff08\u5c3d\u53ef\u80fd\u5c11\u6216\u8005\u5148\u4e0d\u4ed8\uff09","title":"\u79df\u623f\u6ce8\u610f\u4e8b\u9879"},{"location":"test/%E7%A7%9F%E6%88%BF%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/#_1","text":"","title":"\u79df\u623f\u6ce8\u610f\u4e8b\u9879"},{"location":"test/%E7%A7%9F%E6%88%BF%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/#_2","text":"\u623f\u5c4b\u4e0a\u6b21\u7684\u6c34\u7535\u6c14\u4ee5\u53ca\u7269\u7ba1\u8fd8\u6709\u5149\u7ea4\u7535\u8bdd\u8d39\u7b49\u6709\u6ca1\u6709\u7ed3\u6e05\u3002\u6c34\u7535\u6c14\u7f51\u3001\u7269\u7ba1\u8d39\u7528\u7684\u652f\u4ed8\uff0c\u4ea4\u623f\u65f6\u7684\u6c34\u7535\u6c14\u8bfb\u6570\u3002 \u5bb6\u5177\u7535\u5668\u7684\u65b0\u65e7\u3001\u8fd0\u884c\u72b6\u51b5\uff08\u51fa\u73b0\u6545\u969c\u65f6\u7531\u8c01\u6765\u7ef4\u4fee\uff09 \u95e8\u7a97\uff0c\u9501 \u5bb6\u7535\uff1a\u51b0\u7bb1\u3001\u7535\u89c6\u3001\u6d17\u8863\u673a\u3001\u7a7a\u8c03 \u53a8\u623f\uff1a\u62bd\u6cb9\u70df\u673a\u3001\u71c3\u6c14\u7076\u3001\u5fae\u6ce2\u7089\u3001\u4e0b\u6c34\u9053 \u5bb6\u5177\uff1a\u6c99\u53d1\u3001\u684c\u6905\u3001\u5e8a\u94fa\u3001\u67dc\u5b50 \u536b\u751f\u95f4\uff1a\u6dcb\u6d74\u3001\u9a6c\u6876\u3001\u70ed\u6c34\u5668 \u5c0f\u533a\u60c5\u51b5\uff0c\u88c5\u4fee\u3001\u7ef4\u4fee\uff0c\u5468\u8fb9\u4e0d\u80fd\u592a\u5435 \u623f\u5c4b\u662f\u5426\u6f0f\u6c34\u3001\u4e0b\u6c34\u9053\u5835\u585e\u3001\u6237\u578b\u3001\u671d\u5411\u3001\u590f\u5929\u4f1a\u4e0d\u4f1a\u592a\u70ed\u3001\u51ac\u5929\u65e5\u7167\u3001\u6f6e\u6e7f\u3001\u536b\u751f\u72b6\u51b5\u3001\u868a\u5b50\u3001\u87d1\u8782\u3001\u7535\u8def\u80fd\u5426\u7528\u5927\u529f\u7387\u7535\u5668","title":"\u623f\u5c4b\u60c5\u51b5\uff1a"},{"location":"test/%E7%A7%9F%E6%88%BF%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/#_3","text":"\u623f\u4e1c\u8eab\u4efd\u8bc1\u548c\u623f\u4ea7\u8bc1\u662f\u5426\u5bf9\u7684\u4e0a\uff0c\u662f\u4e0d\u662f\u4e8c\u623f\u4e1c\uff0c\u8981\u539f\u4ef6\uff08\u7b7e\u7ea6\u7684\u65f6\u5019\uff09 \u7b7e\u5408\u540c\u7684\u65e5\u671f\u4ee5\u53ca\u623f\u79df\u5230\u671f\u65f6\u95f4\uff0c\u8fd8\u6709\u5c31\u662f\u4ea4\u79df\u65b9\u5f0f\u548c\u4ea4\u79df\u65e5\u671f\uff0c\u5982\u679c\u623f\u4e1c\u63d0\u524d\u7ec8\u6b62\u5408\u540c\u8be5\u5982\u4f55\u8d54\u507f\u7b49 \u5b9a\u91d1\uff0c\u62bc\u51e0\u4ed8\u51e0\uff1f\u79df\u671f\u7ed3\u675f\uff0c\u62bc\u91d1\u8fd4\u8fd8\u7684\u6761\u6b3e \u660e\u786e\u4f4d\u7f6e\u3001\u95f4\u6570\u3001\u9762\u79ef\u3001\u8d28\u91cf\u3001 \u79df\u8d41\u671f\u9650 \u3001\u79df\u91d1\u53ca\u652f\u4ed8\u671f\u9650\u4e0e\u65b9\u5f0f \u8981\u4ed4\u7ec6\u770b\u5408\u540c \u4e0d\u8981\u652f\u4ed8\u7ed9\u4e2d\u4ecb\u4e2a\u4eba\uff0c\u8bb0\u5f97\u8981\u6536\u636e\uff0c\u4e2d\u4ecb\u8d39\u662f\u4e00\u6b21\u6027\u7684\u5417? \u652f\u4ed8\u5b9a\u91d1\u7684\u60c5\u51b5\uff08\u5c3d\u53ef\u80fd\u5c11\u6216\u8005\u5148\u4e0d\u4ed8\uff09","title":"\u79df\u623f\u5408\u540c"}]}